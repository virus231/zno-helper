[{"A:\\Code\\zno-helper\\src\\index.tsx":"1","A:\\Code\\zno-helper\\src\\reportWebVitals.ts":"2","A:\\Code\\zno-helper\\src\\store\\store.ts":"3","A:\\Code\\zno-helper\\src\\App.tsx":"4","A:\\Code\\zno-helper\\src\\store\\root-reducer.ts":"5","A:\\Code\\zno-helper\\src\\pages\\index.ts":"6","A:\\Code\\zno-helper\\src\\components\\SideBar.tsx":"7","A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\validation.reducer.ts":"8","A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\auth.reducer.ts":"9","A:\\Code\\zno-helper\\src\\pages\\Home.tsx":"10","A:\\Code\\zno-helper\\src\\pages\\LogIn.tsx":"11","A:\\Code\\zno-helper\\src\\pages\\SignUp.tsx":"12","A:\\Code\\zno-helper\\src\\pages\\Tests.tsx":"13","A:\\Code\\zno-helper\\src\\pages\\ResetPassword.tsx":"14","A:\\Code\\zno-helper\\src\\pages\\Subject.tsx":"15","A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\thunks.ts":"16","A:\\Code\\zno-helper\\src\\redux\\actions\\action.js":"17","A:\\Code\\zno-helper\\src\\components\\SubjectCart.tsx":"18","A:\\Code\\zno-helper\\src\\components\\CodeInput.tsx":"19","A:\\Code\\zno-helper\\src\\components\\ThemeCart.tsx":"20","A:\\Code\\zno-helper\\src\\api\\authApi.ts":"21","A:\\Code\\zno-helper\\src\\utils\\axios.ts":"22","A:\\Code\\zno-helper\\src\\api\\config.ts":"23","A:\\Code\\zno-helper\\src\\pages\\ChoiceSubjects.tsx":"24","A:\\Code\\zno-helper\\src\\pages\\Test.tsx":"25","A:\\Code\\zno-helper\\src\\pages\\Subjects.tsx":"26","A:\\Code\\zno-helper\\src\\components\\Question.tsx":"27","A:\\Code\\zno-helper\\src\\components\\Answer.tsx":"28"},{"size":701,"mtime":1608049178835,"results":"29","hashOfConfig":"30"},{"size":440,"mtime":1608049178843,"results":"31","hashOfConfig":"30"},{"size":167,"mtime":1608049178844,"results":"32","hashOfConfig":"30"},{"size":1389,"mtime":1608244382918,"results":"33","hashOfConfig":"30"},{"size":302,"mtime":1608049178844,"results":"34","hashOfConfig":"30"},{"size":433,"mtime":1608230038529,"results":"35","hashOfConfig":"30"},{"size":16264,"mtime":1608215138362,"results":"36","hashOfConfig":"30"},{"size":1906,"mtime":1608049178840,"results":"37","hashOfConfig":"30"},{"size":2159,"mtime":1608049178839,"results":"38","hashOfConfig":"30"},{"size":2180,"mtime":1608219683113,"results":"39","hashOfConfig":"30"},{"size":7932,"mtime":1608049178837,"results":"40","hashOfConfig":"30"},{"size":20177,"mtime":1608229370414,"results":"41","hashOfConfig":"30"},{"size":720,"mtime":1608220093829,"results":"42","hashOfConfig":"30"},{"size":3392,"mtime":1608238034546,"results":"43","hashOfConfig":"30"},{"size":3918,"mtime":1608219712156,"results":"44","hashOfConfig":"30"},{"size":1022,"mtime":1608049178839,"results":"45","hashOfConfig":"30"},{"size":1564,"mtime":1608049178841,"results":"46","hashOfConfig":"30"},{"size":7141,"mtime":1608244084342,"results":"47","hashOfConfig":"30"},{"size":224,"mtime":1608215138361,"results":"48","hashOfConfig":"30"},{"size":993,"mtime":1608224235533,"results":"49","hashOfConfig":"30"},{"size":784,"mtime":1608049178785,"results":"50","hashOfConfig":"30"},{"size":1528,"mtime":1608049178844,"results":"51","hashOfConfig":"30"},{"size":65,"mtime":1608049178786,"results":"52","hashOfConfig":"30"},{"size":3856,"mtime":1608217472851,"results":"53","hashOfConfig":"30"},{"size":1455,"mtime":1608252512726,"results":"54","hashOfConfig":"30"},{"size":1862,"mtime":1608241551025,"results":"55","hashOfConfig":"30"},{"size":227,"mtime":1608252533952,"results":"56","hashOfConfig":"30"},{"size":450,"mtime":1608252683943,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1r8c61a",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"A:\\Code\\zno-helper\\src\\index.tsx",[],["123","124"],"A:\\Code\\zno-helper\\src\\reportWebVitals.ts",[],"A:\\Code\\zno-helper\\src\\store\\store.ts",[],"A:\\Code\\zno-helper\\src\\App.tsx",[],"A:\\Code\\zno-helper\\src\\store\\root-reducer.ts",[],"A:\\Code\\zno-helper\\src\\pages\\index.ts",[],"A:\\Code\\zno-helper\\src\\components\\SideBar.tsx",[],"A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\validation.reducer.ts",[],"A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\auth.reducer.ts",["125","126","127","128","129","130"],"import { createReducer, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AuthResponse, StateHadnlers } from \"../../../utils/interfaces\";\r\nimport { checkEmail, login, register, sendSmsToPhone } from \"./thunks\";\r\n\r\nconst initialState: AuthResponse & StateHadnlers = {\r\n    email: '',\r\n    id: 0,\r\n    roles: [],\r\n    token: '',\r\n    username: '',\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\n\r\nexport const defaultError = 'Somthing went wrong!'\r\n\r\nexport default createReducer(initialState, builder =>\r\n    builder.addCase(register.pending, (state) => {\r\n        console.log(state)\r\n        state.loading = true\r\n        state.error = null\r\n    })\r\n        .addCase(register.fulfilled, (state, action: PayloadAction<AuthResponse>) => {\r\n            // state = { ...action.payload, ...state }\r\n            const { token, id, email, username, roles } = action.payload\r\n            state.loading = false\r\n            state.error = null\r\n        })\r\n        .addCase(register.rejected, (state, { error }) => {\r\n            state.loading = false\r\n            state.error = error.message ?? defaultError\r\n        })\r\n        .addCase(login.pending, (state) => {\r\n            state.loading = true\r\n            state.error = null\r\n        })\r\n        .addCase(login.fulfilled, (state, action: PayloadAction<AuthResponse>) => {\r\n            // state = { ...action.payload, ...state }\r\n            // state.loading = false\r\n            // state.error = null\r\n        })\r\n        .addCase(login.rejected, (state, { error }) => {\r\n            state.loading = false\r\n            state.error = error.message ?? defaultError\r\n        })\r\n        .addCase(sendSmsToPhone.pending, (state) => {\r\n            state.loading = true\r\n            state.error = null\r\n        })\r\n        .addCase(sendSmsToPhone.fulfilled, (state, action: PayloadAction<any>) => {\r\n            // state = { ...action.payload, ...state }\r\n            // state.loading = false\r\n            // state.error = null\r\n        })\r\n        .addCase(sendSmsToPhone.rejected, (state, { error }) => {\r\n            state.loading = false\r\n            state.error = error.message ?? defaultError\r\n        })\r\n\r\n\r\n)\r\n","A:\\Code\\zno-helper\\src\\pages\\Home.tsx",["131","132"],"import React from 'react';\r\nimport {Col, Container, Row} from 'react-bootstrap';\r\nimport SubjectCart from \"../components/SubjectCart\";\r\nimport {Card, CardBody, CardImg } from \"shards-react\";\r\nimport history from \"../assets/images/history.png\";\r\n\r\nfunction Home():JSX.Element {\r\n\r\n    return (\r\n        <section className=\"mt-5\">\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <h2>Предмети</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-between mt-5\">\r\n                    <SubjectCart/>\r\n                    <SubjectCart/>\r\n                    <SubjectCart/>\r\n                </Row>\r\n                <Row className=\"d-flex justify-content-between mt-3\">\r\n                    <SubjectCart/>\r\n                    <SubjectCart/>\r\n                    <Col>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <p className=\"wrap\">\r\n                                    <svg className=\"add\" width=\"102\" height=\"102\" viewBox=\"0 0 102 102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <circle cx=\"51\" cy=\"51\" r=\"51\" fill=\"#567BF3\" fill-opacity=\"0.1\"/>\r\n                                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M50.4499 35.7002C49.3454 35.7002 48.4499 36.5956 48.4499 37.7002V48.4502H37.6999C36.5954 48.4502 35.6999 49.3456 35.6999 50.4502V51.5502C35.6999 52.6548 36.5954 53.5502 37.6999 53.5502H48.4499V64.3002C48.4499 65.4048 49.3454 66.3002 50.4499 66.3002H51.5499C52.6545 66.3002 53.5499 65.4048 53.5499 64.3002V53.5502H64.2999C65.4045 53.5502 66.2999 52.6548 66.2999 51.5502V50.4502C66.2999 49.3456 65.4045 48.4502 64.2999 48.4502H53.5499V37.7002C53.5499 36.5956 52.6545 35.7002 51.5499 35.7002H50.4499Z\" fill=\"#567BF3\"/>\r\n                                    </svg>\r\n                                </p>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default Home\r\n","A:\\Code\\zno-helper\\src\\pages\\LogIn.tsx",["133","134","135"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport { Formik, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport {Container, Row, Col, InputGroup, Form} from 'react-bootstrap';\r\nimport MaskedInput from \"react-text-mask\";\r\nimport {LoginAuthAction} from \"../redux/actions/action\";\r\n\r\ninterface FormValues {\r\n    number: string;\r\n    password: string;\r\n}\r\n\r\nconst phoneNumberMask = [\r\n    \"(\",\r\n    /[1-10]/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \")\",\r\n    \" \",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \"-\",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/\r\n];\r\n\r\n\r\nfunction LogIn():JSX.Element {\r\n    const dispatch = useDispatch()\r\n    const onLogInUser = (fields) => dispatch(LoginAuthAction(fields))\r\n\r\n    const initialValues: FormValues = {\r\n        number: '',\r\n        password: '',\r\n    };\r\n\r\n    const userSchema = Yup.object({\r\n        number: Yup.string().max(11).min(3)\r\n            // .test('Phone test', 'Phone number must be valid', (val) => {\r\n            //     val = val.replace(/[\\s\\-]/g, '');\r\n            //     return val.match(/^((\\+?3)?8)?((0\\(\\d{2}\\)?)|(\\(0\\d{2}\\))|(0\\d{2}))\\d{7}$/) != null;\r\n            // })\r\n            .required('Required'),\r\n        password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\r\n    })\r\n\r\n    type User = Yup.InferType<typeof userSchema>;\r\n\r\n    return (\r\n        <section className=\"signup promo d-flex justify-content-center align-items-start pt-5\">\r\n            <Container>\r\n                <Row className=\"\">\r\n                    <Col lg={8} className=\"promo-col\">\r\n                        <p>\r\n                            <Link to=\"/signup\">\r\n                                Z-Helper\r\n                            </Link>\r\n                        </p>\r\n                    </Col>\r\n                    <Col lg={4} className=\"pt-5 mt-5\">\r\n                        <h1>Вхід</h1>\r\n                        <Formik\r\n                            initialValues={initialValues}\r\n                            validationSchema={userSchema}\r\n                            onSubmit={onLogInUser}\r\n                            render={({ errors, status, values, touched, handleChange }) => (\r\n                                <Form noValidate>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPhone\">\r\n                                            <Form.Label>Номер телефону</Form.Label>\r\n                                            <InputGroup>\r\n                                                <div className=\"d-flex \">\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text id=\"inputGroupPrepend3\">\r\n                                                            <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\"\r\n                                                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <g clip-path=\"url(#clip0)\">\r\n                                                                    <path\r\n                                                                        d=\"M21.2012 1.15363L16.7325 0.0286319C16.2469 -0.0932431 15.7485 0.183319 15.5508 0.680194L13.4883 5.93019C13.3079 6.38957 13.4282 6.92863 13.7848 7.24269L16.3887 9.56769C14.8419 13.163 12.1391 16.1536 8.77467 17.8739L6.64342 15.0333C6.35123 14.6443 5.86138 14.513 5.44029 14.7099L0.627791 16.9599C0.168026 17.1802 -0.0854899 17.7239 0.0262288 18.2536L1.05748 23.1286C1.1649 23.6349 1.5774 24.0005 2.06295 24.0005C13.0672 24.0005 22.0004 14.2739 22.0004 2.25051C22.0004 1.72551 21.6696 1.27082 21.2012 1.15363Z\"\r\n                                                                        fill=\"#929292\"/>\r\n                                                                </g>\r\n                                                                <defs>\r\n                                                                    <clipPath id=\"clip0\">\r\n                                                                        <rect width=\"22\" height=\"24\" fill=\"white\"/>\r\n                                                                    </clipPath>\r\n                                                                </defs>\r\n                                                            </svg>\r\n                                                        </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <MaskedInput\r\n                                                        mask={phoneNumberMask}\r\n                                                        id=\"phone\"\r\n                                                        aria-describedby=\"inputGroupPrepend3\"\r\n                                                        placeholder=\"Ваш номер\"\r\n                                                        type=\"tel\"\r\n                                                        // onChange={handleChange}\r\n                                                    />\r\n                                                </div>\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPassword\">\r\n                                            <Form.Label>Пароль</Form.Label>\r\n                                            <InputGroup>\r\n                                                <Form.Control\r\n                                                    type=\"password\"\r\n                                                    placeholder=\"Ваш пароль\"\r\n                                                    name=\"password\"\r\n                                                    value={values.password}\r\n                                                    onChange={handleChange}\r\n                                                    isInvalid={!!errors.password}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {errors.password}\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                            <p>\r\n                                                <Link to=\"/reset\">Відновити пароль</Link>\r\n                                            </p>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <div className=\"form-group text-center\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-register mr-2 px-5\">Увійти</button>\r\n                                        <p>Ще не маєш профілю?\r\n                                            <Link to=\"/signup\" className=\"ml-2\">\r\n                                                Створити\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LogIn;\r\n","A:\\Code\\zno-helper\\src\\pages\\SignUp.tsx",["136","137","138","139","140","141","142"],"import React, { useState } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Formik, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport { Container, Row, Col, Form, InputGroup } from 'react-bootstrap';\r\nimport MaskedInput from \"react-text-mask\";\r\nimport CodeInput from '../components/CodeInput'\r\nimport { checkUsername, register } from \"./styles/auth/thunks\";\r\nimport { RegisterBody } from '../utils/interfaces'\r\n\r\n\r\nconst phoneNumberMask = [\r\n    \"(\",\r\n    /[1-10]/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \")\",\r\n    \" \",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \"-\",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/\r\n];\r\n\r\nfunction SignUp(): JSX.Element {\r\n    const [activeCode, setActiveCode] = useState(false)\r\n    const [activeReferal, setActiveReferal] = useState(false)\r\n    const state = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    const onRegisterUser = (values) => dispatch(register(values))\r\n\r\n    const initialValues: RegisterBody = {\r\n        username: '',\r\n        email: '',\r\n        phone: '',\r\n        password: ''\r\n    };\r\n\r\n    const userSchema = Yup.object({\r\n        username: Yup.string().required('FirstName is required'),\r\n        email: Yup.string().email('Email is invalid').required('Email is required'),\r\n        password: Yup.string().min(6, 'Введи 6 символів').required('Password is required')\r\n    })\r\n\r\n    type User = Yup.InferType<typeof userSchema>;\r\n\r\n    const validateUsername = (e: React.ChangeEvent<any>, handleChange) => {\r\n        const username = e.target.value\r\n        dispatch(checkUsername(username))\r\n        handleChange(e)\r\n    }\r\n\r\n\r\n    const validUsername = useSelector((state) => state.validation.usernameValid)\r\n\r\n    const showCode = () => {\r\n        setActiveCode(!false)\r\n    }\r\n\r\n    const showReferal = () => {\r\n        setActiveReferal(!false)\r\n    }\r\n\r\n    return (\r\n        <section className=\"signup promo d-flex justify-content-center align-items-start pt-5\">\r\n            <Container>\r\n                <Row className=\"\">\r\n                    <Col lg={8} className=\"promo-col\">\r\n                        <p>\r\n                            <Link to=\"/signup\">\r\n                                Z-Helper\r\n                            </Link>\r\n                        </p>\r\n                    </Col>\r\n                    <Col lg={4} className=\"pt-5 mt-5\">\r\n                        <Formik\r\n                            initialValues={initialValues}\r\n                            validationSchema={userSchema}\r\n                            onSubmit={(values, actions) => {\r\n                                onRegisterUser(values)\r\n                            }}\r\n                            render={({ errors, status, touched, handleChange, handleSubmit,\r\n                                handleBlur, values }) => (\r\n                                <>\r\n                                    <Form noValidate onSubmit={handleSubmit} className=\"\">\r\n                                        <h1>Реєстрація</h1>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} md=\"12\" controlId=\"validationFormikUsername\">\r\n                                                <Form.Label>Ім’я користувача</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text id=\"inputGroupPrepend\">\r\n                                                            <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <g clip-path=\"url(#clip0)\">\r\n                                                                    <path d=\"M7.7 12C10.1303 12 12.1 9.31406 12.1 6C12.1 2.68594 10.1303 0 7.7 0C5.26969 0 3.3 2.68594 3.3 6C3.3 9.31406 5.26969 12 7.7 12ZM10.78 13.5H10.2059C9.44281 13.9781 8.59375 14.25 7.7 14.25C6.80625 14.25 5.96063 13.9781 5.19406 13.5H4.62C2.06938 13.5 0 16.3219 0 19.8V21.75C0 22.9922 0.739062 24 1.65 24H11.0997C11.0172 23.6812 10.9828 23.3438 11.0103 23.0016L11.2441 20.1469L11.2853 19.6266L11.5569 19.2562L14.2141 15.6328C13.3719 14.3344 12.1516 13.5 10.78 13.5ZM12.3372 20.3109L12.1034 23.1703C12.0656 23.6484 12.3613 24.0516 12.7084 23.9953L14.8019 23.6766L19.5422 17.2125L17.0775 13.8516L12.3372 20.3109ZM21.7594 12.6047L20.4566 10.8281C20.1369 10.3922 19.6144 10.3922 19.2947 10.8281L17.9953 12.6L17.8544 12.7922L20.3225 16.1531L21.7594 14.1937C22.0791 13.7531 22.0791 13.0453 21.7594 12.6047Z\" fill=\"#929292\" />\r\n                                                                </g>\r\n                                                                <defs>\r\n                                                                    <clipPath id=\"clip0\">\r\n                                                                        <rect width=\"22\" height=\"24\" fill=\"white\" />\r\n                                                                    </clipPath>\r\n                                                                </defs>\r\n                                                            </svg>\r\n                                                        </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Ваше ім'я\"\r\n                                                        aria-describedby=\"inputGroupPrepend\"\r\n                                                        name=\"username\"\r\n                                                        value={values.username}\r\n                                                        onChange={handleChange}\r\n                                                        isInvalid={!!errors.username}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {errors.username}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} md=\"12\" controlId=\"validationFormikEmail\">\r\n                                                <Form.Label>Електронна пошта</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text id=\"inputGroupPrepend2\">\r\n                                                            <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <path d=\"M21.5832 8.94375C21.7508 8.79844 22 8.93437 22 9.16406V18.75C22 19.9922 21.0762 21 19.9375 21H2.0625C0.923828 21 0 19.9922 0 18.75V9.16875C0 8.93438 0.244922 8.80312 0.416797 8.94844C1.3793 9.76406 2.65547 10.8 7.03828 14.2734C7.94492 14.9953 9.47461 16.5141 11 16.5047C12.534 16.5188 14.0937 14.9672 14.966 14.2734C19.3488 10.8 20.6207 9.75938 21.5832 8.94375ZM11 15C11.9969 15.0188 13.432 13.6313 14.1539 13.0594C19.8559 8.54531 20.2898 8.15156 21.6047 7.02656C21.8539 6.81562 22 6.4875 22 6.14062V5.25C22 4.00781 21.0762 3 19.9375 3H2.0625C0.923828 3 0 4.00781 0 5.25V6.14062C0 6.4875 0.146094 6.81094 0.395312 7.02656C1.71016 8.14687 2.14414 8.54531 7.84609 13.0594C8.56797 13.6313 10.0031 15.0188 11 15Z\" fill=\"#929292\" />\r\n                                                            </svg>\r\n                                                        </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Ваш email\"\r\n                                                        aria-describedby=\"inputGroupPrepend2\"\r\n                                                        name=\"email\"\r\n                                                        value={values.email}\r\n                                                        onChange={handleChange}\r\n                                                        isInvalid={!!errors.email}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {errors.email}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPhone\">\r\n                                                <Form.Label>Номер телефону</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <div className=\"d-flex \">\r\n                                                        <InputGroup.Prepend>\r\n                                                            <InputGroup.Text id=\"inputGroupPrepend3\">\r\n                                                                <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                    <g clip-path=\"url(#clip0)\">\r\n                                                                        <path d=\"M21.2012 1.15363L16.7325 0.0286319C16.2469 -0.0932431 15.7485 0.183319 15.5508 0.680194L13.4883 5.93019C13.3079 6.38957 13.4282 6.92863 13.7848 7.24269L16.3887 9.56769C14.8419 13.163 12.1391 16.1536 8.77467 17.8739L6.64342 15.0333C6.35123 14.6443 5.86138 14.513 5.44029 14.7099L0.627791 16.9599C0.168026 17.1802 -0.0854899 17.7239 0.0262288 18.2536L1.05748 23.1286C1.1649 23.6349 1.5774 24.0005 2.06295 24.0005C13.0672 24.0005 22.0004 14.2739 22.0004 2.25051C22.0004 1.72551 21.6696 1.27082 21.2012 1.15363Z\" fill=\"#929292\" />\r\n                                                                    </g>\r\n                                                                    <defs>\r\n                                                                        <clipPath id=\"clip0\">\r\n                                                                            <rect width=\"22\" height=\"24\" fill=\"white\" />\r\n                                                                        </clipPath>\r\n                                                                    </defs>\r\n                                                                </svg>\r\n                                                            </InputGroup.Text>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <MaskedInput\r\n                                                            mask={phoneNumberMask}\r\n                                                            id=\"phone\"\r\n                                                            aria-describedby=\"inputGroupPrepend3\"\r\n                                                            placeholder=\"Ваш номер\"\r\n                                                            type=\"tel\"\r\n                                                            onChange={handleChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    \r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n\r\n                                        </Form.Row>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPassword\">\r\n                                                <Form.Label>Пароль</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"password\"\r\n                                                        placeholder=\"Ваш пароль\"\r\n                                                        name=\"password\"\r\n                                                        value={values.password}\r\n                                                        onChange={handleChange}\r\n                                                        isInvalid={!!errors.password}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {errors.password}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} md=\"12\" controlId=\"Referal\">\r\n                                                <p className=\"referal\" onClick={showReferal}>\r\n                                                    {activeReferal ? 'Реферал' : 'Вказати реферала'}\r\n                                                </p>\r\n                                                <InputGroup className={activeReferal ? 'd-flex' : 'd-none'}>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Реферал\"\r\n                                                        name=\"referral\"\r\n                                                        value={values.referral}\r\n                                                        onChange={handleChange}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                        <div className=\"form-group text-center\">\r\n                                            <button type=\"submit\" className=\"btn btn-primary btn-register mr-2 px-5\">Зареєструватися</button>\r\n                                            <p>Вже маєш профіль?\r\n                                            <Link to=\"/login\" className=\"ml-2\">\r\n                                                    Увійти\r\n                                            </Link>\r\n                                            </p>\r\n                                        </div>\r\n                                    </Form>\r\n\r\n                                    \r\n                                    <Form className=\"d-none\">\r\n                                        <h3>Верифікація телефону</h3>\r\n                                        <Form.Row className=\"mt-5\">\r\n                                            <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPhone\">\r\n                                                <Form.Label>Номер телефону</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <div className=\"d-flex \">\r\n                                                        <InputGroup.Prepend>\r\n                                                            <InputGroup.Text id=\"inputGroupPrepend3\">\r\n                                                                <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                    <g clip-path=\"url(#clip0)\">\r\n                                                                        <path d=\"M21.2012 1.15363L16.7325 0.0286319C16.2469 -0.0932431 15.7485 0.183319 15.5508 0.680194L13.4883 5.93019C13.3079 6.38957 13.4282 6.92863 13.7848 7.24269L16.3887 9.56769C14.8419 13.163 12.1391 16.1536 8.77467 17.8739L6.64342 15.0333C6.35123 14.6443 5.86138 14.513 5.44029 14.7099L0.627791 16.9599C0.168026 17.1802 -0.0854899 17.7239 0.0262288 18.2536L1.05748 23.1286C1.1649 23.6349 1.5774 24.0005 2.06295 24.0005C13.0672 24.0005 22.0004 14.2739 22.0004 2.25051C22.0004 1.72551 21.6696 1.27082 21.2012 1.15363Z\" fill=\"#929292\" />\r\n                                                                    </g>\r\n                                                                    <defs>\r\n                                                                        <clipPath id=\"clip0\">\r\n                                                                            <rect width=\"22\" height=\"24\" fill=\"white\" />\r\n                                                                        </clipPath>\r\n                                                                    </defs>\r\n                                                                </svg>\r\n                                                            </InputGroup.Text>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <MaskedInput\r\n                                                            mask={phoneNumberMask}\r\n                                                            id=\"phone\"\r\n                                                            aria-describedby=\"inputGroupPrepend3\"\r\n                                                            placeholder=\"Ваш номер\"\r\n                                                            type=\"tel\"\r\n                                                            onChange={handleChange}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"form-group text-center\">\r\n                                                            <CodeInput />\r\n                                                        <button onClick={showCode} type=\"button\" className=\"text-center btn\">Підтвердити</button>\r\n                                                    </div>\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                        <div className=\"text-center\">\r\n                                            <button className=\"btn px-5 btn-verification\">\r\n                                                Верифікація\r\n                                            </button>\r\n                                        </div>\r\n                                    </Form>\r\n                                </>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default SignUp\r\n","A:\\Code\\zno-helper\\src\\pages\\Tests.tsx",[],"A:\\Code\\zno-helper\\src\\pages\\ResetPassword.tsx",["143"],"import React from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ErrorMessage, Field, Form, Formik, FormikValues} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\ninterface FormValues {\r\n    email: string;\r\n}\r\n\r\n\r\nfunction ResetPassword():JSX.Element {\r\n\r\n    const initialValues: FormValues = {\r\n        email: '',\r\n    };\r\n\r\n    const userSchema = Yup.object({\r\n        email: Yup.string().email('Email is invalid').required('Email is required'),\r\n    })\r\n\r\n    type User = Yup.InferType<typeof userSchema>;\r\n\r\n    function onReset(values: FormikValues) {\r\n        console.log(values)\r\n    }\r\n\r\n    return (\r\n        <section className=\"reset d-flex justify-content-center align-items-start pt-5\">\r\n            <Container>\r\n                <Row className=\"\">\r\n                    <Col lg={8} className=\"promo-col\">\r\n                        <p>\r\n                            <Link to=\"/signup\">\r\n                                Z-Helper\r\n                            </Link>\r\n                        </p>\r\n                    </Col>\r\n                    <Col lg={4} className=\"pt-5 mt-5\">\r\n                        <h3 className=\"reset-title\">Відновлення паролю</h3>\r\n                        <Formik\r\n                            initialValues={initialValues}\r\n                            validationSchema={userSchema}\r\n                            onSubmit={(values, actions) => {\r\n                                onReset(values)\r\n                            }}\r\n                            render={({ errors, status, touched, handleChange, handleSubmit,\r\n                                         handleBlur, values }) => (\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group mt-5\">\r\n                                        <label htmlFor=\"email\">Електронна пошта</label>\r\n                                        <Field\r\n                                            name=\"email\"\r\n                                            type=\"text\"\r\n                                            value={values.email}\r\n                                            onChange={handleChange}\r\n                                            className={`form-control ${errors.email && touched.email && 'is-invalid'}`}/>\r\n                                        <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                    </div>\r\n                                    <div className=\"form-group text-center\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-register mr-2 px-5\">Надіслати</button>\r\n                                        <p>\r\n                                            Згадав пароль?\r\n                                            <Link to=\"/login\" className=\"ml-2\">\r\n                                                Увійти\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                </Form>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n","A:\\Code\\zno-helper\\src\\pages\\Subject.tsx",[],"A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\thunks.ts",[],"A:\\Code\\zno-helper\\src\\redux\\actions\\action.js",[],["144","145"],"A:\\Code\\zno-helper\\src\\components\\SubjectCart.tsx",[],"A:\\Code\\zno-helper\\src\\components\\CodeInput.tsx",[],"A:\\Code\\zno-helper\\src\\components\\ThemeCart.tsx",[],"A:\\Code\\zno-helper\\src\\api\\authApi.ts",[],"A:\\Code\\zno-helper\\src\\utils\\axios.ts",["146"],"import BaseAxios from \"axios\";\r\nimport jwtDecode , {JwtPayload} from \"jwt-decode\";\r\nimport { BASE_URL } from \"../api/config\";\r\n\r\nexport const axios = BaseAxios.create({ baseURL: BASE_URL })\r\n\r\nconst whiteList = ['auth',]\r\n\r\nconst inWhiteList = (url: string): boolean => {\r\n    const match = whiteList.find((i) => url.includes(i))\r\n    return !!match\r\n}\r\nconst tokenValid = (token?: string): boolean => {\r\n    if(!token) return false\r\n    try {\r\n        const currentDate = new Date()\r\n        const { exp }: JwtPayload = jwtDecode(token)\r\n        if(exp === undefined) return false\r\n        return !(exp * 1000 < currentDate.getTime())\r\n    } catch (error) {\r\n        return false\r\n    }\r\n}\r\n\r\naxios.interceptors.request.use(\r\n    async (request) => {\r\n        if (!inWhiteList(request.url ?? '')) {\r\n            const newRequest = { ...request }\r\n            return newRequest\r\n        }\r\n\r\n        return request\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error)\r\n    },\r\n)\r\n\r\naxios.interceptors.response.use(\r\n    (response) => {\r\n        return response.data\r\n    },\r\n    async (error) => {\r\n        // const { token } = store.getState().login\r\n        if (\r\n            error &&\r\n            error.response &&\r\n            (error.response.status === 401 || error.response.status === 403)\r\n            // && token\r\n        ) {\r\n            // eslint-disable-next-line no-void\r\n            // void store.dispatch(doLogout())\r\n            return null\r\n        }\r\n        return Promise.reject(error)\r\n    },\r\n)\r\n","A:\\Code\\zno-helper\\src\\api\\config.ts",[],"A:\\Code\\zno-helper\\src\\pages\\ChoiceSubjects.tsx",["147","148"],"import React, { useState} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nimport ch from '../assets/images/chemistry mini.png'\r\nimport en from '../assets/images/english.png'\r\nimport ph from '../assets/images/physics.png'\r\n\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\n\r\n\r\nfunction Subjects():JSX.Element {\r\n    return (\r\n        <section className=\"subjects pt-5\">\r\n            <Container>\r\n                <Row className=\"text-center\">\r\n                    <Col xs=\"12\">\r\n                        <h3>Username вибери предмети для складання ЗНО</h3>\r\n                        <p>Ти будеш готуватись по цим предметах</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"12\">\r\n                        <Swiper\r\n                            spaceBetween={50}\r\n                            slidesPerView={3}\r\n                            navigation\r\n                            scrollbar={{ draggable: true }}\r\n                            onSwiper={(swiper) => console.log(swiper)}\r\n                            onSlideChange={() => console.log('slide change')}\r\n                        >\r\n                            <SwiperSlide>\r\n                                <div className=\"text-uppercase d-flex flex-column align-items-center\">\r\n                                    <span className=\"\">Xімія</span>\r\n                                    <img className=\"img-fluid\" src={ch} alt=\"Chemistry\"/>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                            <SwiperSlide>\r\n                                <div className=\"text-uppercase d-flex flex-column align-items-center\">\r\n                                    <span className=\"\">Анг.мова</span>\r\n                                    <img className=\"img-fluid\" src={en} alt=\"Chemistry\"/>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                            <SwiperSlide>\r\n\r\n                                <div className=\"text-uppercase d-flex flex-column align-items-center\">\r\n                                    <span className=\"\">Фізика</span>\r\n                                    <img className=\"img-fluid\" src={en} alt=\"Chemistry\"/>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                            <SwiperSlide>\r\n                                <div className=\"text-uppercase d-flex flex-column align-items-center\">\r\n                                    <span className=\"\">Анг.мова</span>\r\n                                    <img className=\"img-fluid\" src={en} alt=\"Chemistry\"/>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                        </Swiper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={12} className=\"d-flex justify-content-center text-center align-items-center mt-5\">\r\n                        <div>\r\n                            <p>Вибрано 5/6</p>\r\n                            <Link to=\"/\" className=\"btn btn-primary btn-continue px-5 \">\r\n                                Продовжити\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Subjects\r\n","A:\\Code\\zno-helper\\src\\pages\\Test.tsx",["149"],"A:\\Code\\zno-helper\\src\\pages\\Subjects.tsx",[],"A:\\Code\\zno-helper\\src\\components\\Question.tsx",[],"A:\\Code\\zno-helper\\src\\components\\Answer.tsx",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":20},{"ruleId":"154","severity":1,"message":"158","line":26,"column":21,"nodeType":"156","messageId":"157","endLine":26,"endColumn":26},{"ruleId":"154","severity":1,"message":"159","line":26,"column":28,"nodeType":"156","messageId":"157","endLine":26,"endColumn":30},{"ruleId":"154","severity":1,"message":"160","line":26,"column":32,"nodeType":"156","messageId":"157","endLine":26,"endColumn":37},{"ruleId":"154","severity":1,"message":"161","line":26,"column":39,"nodeType":"156","messageId":"157","endLine":26,"endColumn":47},{"ruleId":"154","severity":1,"message":"162","line":26,"column":49,"nodeType":"156","messageId":"157","endLine":26,"endColumn":54},{"ruleId":"154","severity":1,"message":"163","line":4,"column":25,"nodeType":"156","messageId":"157","endLine":4,"endColumn":32},{"ruleId":"154","severity":1,"message":"164","line":5,"column":8,"nodeType":"156","messageId":"157","endLine":5,"endColumn":15},{"ruleId":"154","severity":1,"message":"165","line":4,"column":18,"nodeType":"156","messageId":"157","endLine":4,"endColumn":23},{"ruleId":"154","severity":1,"message":"166","line":4,"column":25,"nodeType":"156","messageId":"157","endLine":4,"endColumn":37},{"ruleId":"154","severity":1,"message":"167","line":52,"column":10,"nodeType":"156","messageId":"157","endLine":52,"endColumn":14},{"ruleId":"154","severity":1,"message":"165","line":4,"column":18,"nodeType":"156","messageId":"157","endLine":4,"endColumn":23},{"ruleId":"154","severity":1,"message":"166","line":4,"column":25,"nodeType":"156","messageId":"157","endLine":4,"endColumn":37},{"ruleId":"154","severity":1,"message":"168","line":31,"column":12,"nodeType":"156","messageId":"157","endLine":31,"endColumn":22},{"ruleId":"154","severity":1,"message":"169","line":33,"column":11,"nodeType":"156","messageId":"157","endLine":33,"endColumn":16},{"ruleId":"154","severity":1,"message":"167","line":50,"column":10,"nodeType":"156","messageId":"157","endLine":50,"endColumn":14},{"ruleId":"154","severity":1,"message":"170","line":52,"column":11,"nodeType":"156","messageId":"157","endLine":52,"endColumn":27},{"ruleId":"154","severity":1,"message":"171","line":59,"column":11,"nodeType":"156","messageId":"157","endLine":59,"endColumn":24},{"ruleId":"154","severity":1,"message":"167","line":23,"column":10,"nodeType":"156","messageId":"157","endLine":23,"endColumn":14},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"172","line":13,"column":7,"nodeType":"156","messageId":"157","endLine":13,"endColumn":17},{"ruleId":"154","severity":1,"message":"173","line":1,"column":17,"nodeType":"156","messageId":"157","endLine":1,"endColumn":25},{"ruleId":"154","severity":1,"message":"174","line":13,"column":8,"nodeType":"156","messageId":"157","endLine":13,"endColumn":10},{"ruleId":"154","severity":1,"message":"175","line":3,"column":10,"nodeType":"156","messageId":"157","endLine":3,"endColumn":14},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"@typescript-eslint/no-unused-vars","'checkEmail' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'id' is assigned a value but never used.","'email' is assigned a value but never used.","'username' is assigned a value but never used.","'roles' is assigned a value but never used.","'CardImg' is defined but never used.","'history' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'User' is defined but never used.","'activeCode' is assigned a value but never used.","'state' is assigned a value but never used.","'validateUsername' is assigned a value but never used.","'validUsername' is assigned a value but never used.","'tokenValid' is assigned a value but never used.","'useState' is defined but never used.","'ph' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]