[{"A:\\Code\\zno-helper\\src\\index.tsx":"1","A:\\Code\\zno-helper\\src\\reportWebVitals.ts":"2","A:\\Code\\zno-helper\\src\\store\\store.ts":"3","A:\\Code\\zno-helper\\src\\App.tsx":"4","A:\\Code\\zno-helper\\src\\store\\root-reducer.ts":"5","A:\\Code\\zno-helper\\src\\pages\\index.ts":"6","A:\\Code\\zno-helper\\src\\components\\SideBar.tsx":"7","A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\validation.reducer.ts":"8","A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\auth.reducer.ts":"9","A:\\Code\\zno-helper\\src\\pages\\Home.tsx":"10","A:\\Code\\zno-helper\\src\\pages\\LogIn.tsx":"11","A:\\Code\\zno-helper\\src\\pages\\SignUp.tsx":"12","A:\\Code\\zno-helper\\src\\pages\\Tests.tsx":"13","A:\\Code\\zno-helper\\src\\pages\\ResetPassword.tsx":"14","A:\\Code\\zno-helper\\src\\pages\\Subject.tsx":"15","A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\thunks.ts":"16","A:\\Code\\zno-helper\\src\\redux\\actions\\action.js":"17","A:\\Code\\zno-helper\\src\\components\\SubjectCart.tsx":"18","A:\\Code\\zno-helper\\src\\components\\CodeInput.tsx":"19","A:\\Code\\zno-helper\\src\\components\\ThemeCart.tsx":"20","A:\\Code\\zno-helper\\src\\api\\authApi.ts":"21","A:\\Code\\zno-helper\\src\\utils\\axios.ts":"22","A:\\Code\\zno-helper\\src\\api\\config.ts":"23","A:\\Code\\zno-helper\\src\\pages\\ChoiceSubjects.tsx":"24","A:\\Code\\zno-helper\\src\\pages\\Test.tsx":"25","A:\\Code\\zno-helper\\src\\pages\\Subjects.tsx":"26"},{"size":701,"mtime":1608049178835,"results":"27","hashOfConfig":"28"},{"size":440,"mtime":1608049178843,"results":"29","hashOfConfig":"28"},{"size":167,"mtime":1608049178844,"results":"30","hashOfConfig":"28"},{"size":1391,"mtime":1608231332867,"results":"31","hashOfConfig":"28"},{"size":302,"mtime":1608049178844,"results":"32","hashOfConfig":"28"},{"size":433,"mtime":1608230038529,"results":"33","hashOfConfig":"28"},{"size":16264,"mtime":1608215138362,"results":"34","hashOfConfig":"28"},{"size":1906,"mtime":1608049178840,"results":"35","hashOfConfig":"28"},{"size":2159,"mtime":1608049178839,"results":"36","hashOfConfig":"28"},{"size":2180,"mtime":1608219683113,"results":"37","hashOfConfig":"28"},{"size":7932,"mtime":1608049178837,"results":"38","hashOfConfig":"28"},{"size":20177,"mtime":1608229370414,"results":"39","hashOfConfig":"28"},{"size":720,"mtime":1608220093829,"results":"40","hashOfConfig":"28"},{"size":3392,"mtime":1608238034546,"results":"41","hashOfConfig":"28"},{"size":3918,"mtime":1608219712156,"results":"42","hashOfConfig":"28"},{"size":1022,"mtime":1608049178839,"results":"43","hashOfConfig":"28"},{"size":1564,"mtime":1608049178841,"results":"44","hashOfConfig":"28"},{"size":7139,"mtime":1608220047174,"results":"45","hashOfConfig":"28"},{"size":224,"mtime":1608215138361,"results":"46","hashOfConfig":"28"},{"size":993,"mtime":1608224235533,"results":"47","hashOfConfig":"28"},{"size":784,"mtime":1608049178785,"results":"48","hashOfConfig":"28"},{"size":1528,"mtime":1608049178844,"results":"49","hashOfConfig":"28"},{"size":65,"mtime":1608049178786,"results":"50","hashOfConfig":"28"},{"size":3856,"mtime":1608217472851,"results":"51","hashOfConfig":"28"},{"size":144,"mtime":1608217904204,"results":"52","hashOfConfig":"28"},{"size":1719,"mtime":1608237564375,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1r8c61a",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"A:\\Code\\zno-helper\\src\\index.tsx",[],["111","112"],"A:\\Code\\zno-helper\\src\\reportWebVitals.ts",[],"A:\\Code\\zno-helper\\src\\store\\store.ts",[],"A:\\Code\\zno-helper\\src\\App.tsx",[],"A:\\Code\\zno-helper\\src\\store\\root-reducer.ts",[],"A:\\Code\\zno-helper\\src\\pages\\index.ts",[],"A:\\Code\\zno-helper\\src\\components\\SideBar.tsx",[],"A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\validation.reducer.ts",[],"A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\auth.reducer.ts",["113","114","115","116","117","118"],"import { createReducer, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AuthResponse, StateHadnlers } from \"../../../utils/interfaces\";\r\nimport { checkEmail, login, register, sendSmsToPhone } from \"./thunks\";\r\n\r\nconst initialState: AuthResponse & StateHadnlers = {\r\n    email: '',\r\n    id: 0,\r\n    roles: [],\r\n    token: '',\r\n    username: '',\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\n\r\nexport const defaultError = 'Somthing went wrong!'\r\n\r\nexport default createReducer(initialState, builder =>\r\n    builder.addCase(register.pending, (state) => {\r\n        console.log(state)\r\n        state.loading = true\r\n        state.error = null\r\n    })\r\n        .addCase(register.fulfilled, (state, action: PayloadAction<AuthResponse>) => {\r\n            // state = { ...action.payload, ...state }\r\n            const { token, id, email, username, roles } = action.payload\r\n            state.loading = false\r\n            state.error = null\r\n        })\r\n        .addCase(register.rejected, (state, { error }) => {\r\n            state.loading = false\r\n            state.error = error.message ?? defaultError\r\n        })\r\n        .addCase(login.pending, (state) => {\r\n            state.loading = true\r\n            state.error = null\r\n        })\r\n        .addCase(login.fulfilled, (state, action: PayloadAction<AuthResponse>) => {\r\n            // state = { ...action.payload, ...state }\r\n            // state.loading = false\r\n            // state.error = null\r\n        })\r\n        .addCase(login.rejected, (state, { error }) => {\r\n            state.loading = false\r\n            state.error = error.message ?? defaultError\r\n        })\r\n        .addCase(sendSmsToPhone.pending, (state) => {\r\n            state.loading = true\r\n            state.error = null\r\n        })\r\n        .addCase(sendSmsToPhone.fulfilled, (state, action: PayloadAction<any>) => {\r\n            // state = { ...action.payload, ...state }\r\n            // state.loading = false\r\n            // state.error = null\r\n        })\r\n        .addCase(sendSmsToPhone.rejected, (state, { error }) => {\r\n            state.loading = false\r\n            state.error = error.message ?? defaultError\r\n        })\r\n\r\n\r\n)\r\n","A:\\Code\\zno-helper\\src\\pages\\Home.tsx",["119","120"],"A:\\Code\\zno-helper\\src\\pages\\LogIn.tsx",["121","122","123"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport { Formik, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport {Container, Row, Col, InputGroup, Form} from 'react-bootstrap';\r\nimport MaskedInput from \"react-text-mask\";\r\nimport {LoginAuthAction} from \"../redux/actions/action\";\r\n\r\ninterface FormValues {\r\n    number: string;\r\n    password: string;\r\n}\r\n\r\nconst phoneNumberMask = [\r\n    \"(\",\r\n    /[1-10]/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \")\",\r\n    \" \",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \"-\",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/\r\n];\r\n\r\n\r\nfunction LogIn():JSX.Element {\r\n    const dispatch = useDispatch()\r\n    const onLogInUser = (fields) => dispatch(LoginAuthAction(fields))\r\n\r\n    const initialValues: FormValues = {\r\n        number: '',\r\n        password: '',\r\n    };\r\n\r\n    const userSchema = Yup.object({\r\n        number: Yup.string().max(11).min(3)\r\n            // .test('Phone test', 'Phone number must be valid', (val) => {\r\n            //     val = val.replace(/[\\s\\-]/g, '');\r\n            //     return val.match(/^((\\+?3)?8)?((0\\(\\d{2}\\)?)|(\\(0\\d{2}\\))|(0\\d{2}))\\d{7}$/) != null;\r\n            // })\r\n            .required('Required'),\r\n        password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\r\n    })\r\n\r\n    type User = Yup.InferType<typeof userSchema>;\r\n\r\n    return (\r\n        <section className=\"signup promo d-flex justify-content-center align-items-start pt-5\">\r\n            <Container>\r\n                <Row className=\"\">\r\n                    <Col lg={8} className=\"promo-col\">\r\n                        <p>\r\n                            <Link to=\"/signup\">\r\n                                Z-Helper\r\n                            </Link>\r\n                        </p>\r\n                    </Col>\r\n                    <Col lg={4} className=\"pt-5 mt-5\">\r\n                        <h1>Вхід</h1>\r\n                        <Formik\r\n                            initialValues={initialValues}\r\n                            validationSchema={userSchema}\r\n                            onSubmit={onLogInUser}\r\n                            render={({ errors, status, values, touched, handleChange }) => (\r\n                                <Form noValidate>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPhone\">\r\n                                            <Form.Label>Номер телефону</Form.Label>\r\n                                            <InputGroup>\r\n                                                <div className=\"d-flex \">\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text id=\"inputGroupPrepend3\">\r\n                                                            <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\"\r\n                                                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <g clip-path=\"url(#clip0)\">\r\n                                                                    <path\r\n                                                                        d=\"M21.2012 1.15363L16.7325 0.0286319C16.2469 -0.0932431 15.7485 0.183319 15.5508 0.680194L13.4883 5.93019C13.3079 6.38957 13.4282 6.92863 13.7848 7.24269L16.3887 9.56769C14.8419 13.163 12.1391 16.1536 8.77467 17.8739L6.64342 15.0333C6.35123 14.6443 5.86138 14.513 5.44029 14.7099L0.627791 16.9599C0.168026 17.1802 -0.0854899 17.7239 0.0262288 18.2536L1.05748 23.1286C1.1649 23.6349 1.5774 24.0005 2.06295 24.0005C13.0672 24.0005 22.0004 14.2739 22.0004 2.25051C22.0004 1.72551 21.6696 1.27082 21.2012 1.15363Z\"\r\n                                                                        fill=\"#929292\"/>\r\n                                                                </g>\r\n                                                                <defs>\r\n                                                                    <clipPath id=\"clip0\">\r\n                                                                        <rect width=\"22\" height=\"24\" fill=\"white\"/>\r\n                                                                    </clipPath>\r\n                                                                </defs>\r\n                                                            </svg>\r\n                                                        </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <MaskedInput\r\n                                                        mask={phoneNumberMask}\r\n                                                        id=\"phone\"\r\n                                                        aria-describedby=\"inputGroupPrepend3\"\r\n                                                        placeholder=\"Ваш номер\"\r\n                                                        type=\"tel\"\r\n                                                        // onChange={handleChange}\r\n                                                    />\r\n                                                </div>\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPassword\">\r\n                                            <Form.Label>Пароль</Form.Label>\r\n                                            <InputGroup>\r\n                                                <Form.Control\r\n                                                    type=\"password\"\r\n                                                    placeholder=\"Ваш пароль\"\r\n                                                    name=\"password\"\r\n                                                    value={values.password}\r\n                                                    onChange={handleChange}\r\n                                                    isInvalid={!!errors.password}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {errors.password}\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                            <p>\r\n                                                <Link to=\"/reset\">Відновити пароль</Link>\r\n                                            </p>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <div className=\"form-group text-center\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-register mr-2 px-5\">Увійти</button>\r\n                                        <p>Ще не маєш профілю?\r\n                                            <Link to=\"/signup\" className=\"ml-2\">\r\n                                                Створити\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LogIn;\r\n","A:\\Code\\zno-helper\\src\\pages\\SignUp.tsx",["124","125","126","127","128","129","130"],"A:\\Code\\zno-helper\\src\\pages\\Tests.tsx",[],"A:\\Code\\zno-helper\\src\\pages\\ResetPassword.tsx",["131"],"A:\\Code\\zno-helper\\src\\pages\\Subject.tsx",[],"A:\\Code\\zno-helper\\src\\pages\\styles\\auth\\thunks.ts",[],"A:\\Code\\zno-helper\\src\\redux\\actions\\action.js",[],["132","133"],"A:\\Code\\zno-helper\\src\\components\\SubjectCart.tsx",[],"A:\\Code\\zno-helper\\src\\components\\CodeInput.tsx",[],"A:\\Code\\zno-helper\\src\\components\\ThemeCart.tsx",[],"A:\\Code\\zno-helper\\src\\api\\authApi.ts",[],"A:\\Code\\zno-helper\\src\\utils\\axios.ts",["134"],"import BaseAxios from \"axios\";\r\nimport jwtDecode , {JwtPayload} from \"jwt-decode\";\r\nimport { BASE_URL } from \"../api/config\";\r\n\r\nexport const axios = BaseAxios.create({ baseURL: BASE_URL })\r\n\r\nconst whiteList = ['auth',]\r\n\r\nconst inWhiteList = (url: string): boolean => {\r\n    const match = whiteList.find((i) => url.includes(i))\r\n    return !!match\r\n}\r\nconst tokenValid = (token?: string): boolean => {\r\n    if(!token) return false\r\n    try {\r\n        const currentDate = new Date()\r\n        const { exp }: JwtPayload = jwtDecode(token)\r\n        if(exp === undefined) return false\r\n        return !(exp * 1000 < currentDate.getTime())\r\n    } catch (error) {\r\n        return false\r\n    }\r\n}\r\n\r\naxios.interceptors.request.use(\r\n    async (request) => {\r\n        if (!inWhiteList(request.url ?? '')) {\r\n            const newRequest = { ...request }\r\n            return newRequest\r\n        }\r\n\r\n        return request\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error)\r\n    },\r\n)\r\n\r\naxios.interceptors.response.use(\r\n    (response) => {\r\n        return response.data\r\n    },\r\n    async (error) => {\r\n        // const { token } = store.getState().login\r\n        if (\r\n            error &&\r\n            error.response &&\r\n            (error.response.status === 401 || error.response.status === 403)\r\n            // && token\r\n        ) {\r\n            // eslint-disable-next-line no-void\r\n            // void store.dispatch(doLogout())\r\n            return null\r\n        }\r\n        return Promise.reject(error)\r\n    },\r\n)\r\n","A:\\Code\\zno-helper\\src\\api\\config.ts",[],"A:\\Code\\zno-helper\\src\\pages\\ChoiceSubjects.tsx",["135","136"],"A:\\Code\\zno-helper\\src\\pages\\Test.tsx",[],"A:\\Code\\zno-helper\\src\\pages\\Subjects.tsx",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":20},{"ruleId":"141","severity":1,"message":"145","line":26,"column":21,"nodeType":"143","messageId":"144","endLine":26,"endColumn":26},{"ruleId":"141","severity":1,"message":"146","line":26,"column":28,"nodeType":"143","messageId":"144","endLine":26,"endColumn":30},{"ruleId":"141","severity":1,"message":"147","line":26,"column":32,"nodeType":"143","messageId":"144","endLine":26,"endColumn":37},{"ruleId":"141","severity":1,"message":"148","line":26,"column":39,"nodeType":"143","messageId":"144","endLine":26,"endColumn":47},{"ruleId":"141","severity":1,"message":"149","line":26,"column":49,"nodeType":"143","messageId":"144","endLine":26,"endColumn":54},{"ruleId":"141","severity":1,"message":"150","line":4,"column":25,"nodeType":"143","messageId":"144","endLine":4,"endColumn":32},{"ruleId":"141","severity":1,"message":"151","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":15},{"ruleId":"141","severity":1,"message":"152","line":4,"column":18,"nodeType":"143","messageId":"144","endLine":4,"endColumn":23},{"ruleId":"141","severity":1,"message":"153","line":4,"column":25,"nodeType":"143","messageId":"144","endLine":4,"endColumn":37},{"ruleId":"141","severity":1,"message":"154","line":52,"column":10,"nodeType":"143","messageId":"144","endLine":52,"endColumn":14},{"ruleId":"141","severity":1,"message":"152","line":4,"column":18,"nodeType":"143","messageId":"144","endLine":4,"endColumn":23},{"ruleId":"141","severity":1,"message":"153","line":4,"column":25,"nodeType":"143","messageId":"144","endLine":4,"endColumn":37},{"ruleId":"141","severity":1,"message":"155","line":31,"column":12,"nodeType":"143","messageId":"144","endLine":31,"endColumn":22},{"ruleId":"141","severity":1,"message":"156","line":33,"column":11,"nodeType":"143","messageId":"144","endLine":33,"endColumn":16},{"ruleId":"141","severity":1,"message":"154","line":50,"column":10,"nodeType":"143","messageId":"144","endLine":50,"endColumn":14},{"ruleId":"141","severity":1,"message":"157","line":52,"column":11,"nodeType":"143","messageId":"144","endLine":52,"endColumn":27},{"ruleId":"141","severity":1,"message":"158","line":59,"column":11,"nodeType":"143","messageId":"144","endLine":59,"endColumn":24},{"ruleId":"141","severity":1,"message":"154","line":23,"column":10,"nodeType":"143","messageId":"144","endLine":23,"endColumn":14},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"159","line":13,"column":7,"nodeType":"143","messageId":"144","endLine":13,"endColumn":17},{"ruleId":"141","severity":1,"message":"160","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"161","line":13,"column":8,"nodeType":"143","messageId":"144","endLine":13,"endColumn":10},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"@typescript-eslint/no-unused-vars","'checkEmail' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'id' is assigned a value but never used.","'email' is assigned a value but never used.","'username' is assigned a value but never used.","'roles' is assigned a value but never used.","'CardImg' is defined but never used.","'history' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'User' is defined but never used.","'activeCode' is assigned a value but never used.","'state' is assigned a value but never used.","'validateUsername' is assigned a value but never used.","'validUsername' is assigned a value but never used.","'tokenValid' is assigned a value but never used.","'useState' is defined but never used.","'ph' is defined but never used.","no-global-assign","no-unsafe-negation"]