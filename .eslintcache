[{"C:\\Front\\TypeScript\\my-app\\src\\App.tsx":"1","C:\\Front\\TypeScript\\my-app\\src\\index.tsx":"2","C:\\Front\\TypeScript\\my-app\\src\\reportWebVitals.ts":"3","C:\\Front\\TypeScript\\my-app\\src\\pages\\SignUp.tsx":"4","C:\\Front\\TypeScript\\my-app\\src\\redux\\reducer\\AuthReducer.js":"5","C:\\Front\\TypeScript\\my-app\\src\\redux\\actions\\action.js":"6","C:\\Front\\TypeScript\\my-app\\src\\pages\\LogIn.tsx":"7","C:\\Users\\User\\Documents\\zno-helper\\src\\index.tsx":"8","C:\\Users\\User\\Documents\\zno-helper\\src\\App.tsx":"9","C:\\Users\\User\\Documents\\zno-helper\\src\\redux\\actions\\action.js":"10","C:\\Users\\User\\Documents\\zno-helper\\src\\api\\config.ts":"11","C:\\Users\\User\\Documents\\zno-helper\\src\\reportWebVitals.ts":"12","C:\\Users\\User\\Documents\\zno-helper\\src\\store\\store.ts":"13","C:\\Users\\User\\Documents\\zno-helper\\src\\store\\root-reducer.ts":"14","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\SignUp.tsx":"15","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\LogIn.tsx":"16","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\styles\\auth\\auth.reducer.ts":"17","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\styles\\auth\\thunks.ts":"18","C:\\Users\\User\\Documents\\zno-helper\\src\\api\\authApi.ts":"19","C:\\Users\\User\\Documents\\zno-helper\\src\\utils\\axios.ts":"20","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\ResetPassword.tsx":"21","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\styles\\auth\\validation.reducer.ts":"22","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\Subjects.tsx":"23","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\Home.tsx":"24","C:\\Users\\User\\Documents\\zno-helper\\src\\components\\SideBar.tsx":"25","C:\\Users\\User\\Documents\\zno-helper\\src\\components\\SubjectCart.tsx":"26","C:\\Users\\User\\Documents\\zno-helper\\src\\components\\CodeInput.tsx":"27","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\Subject.tsx":"28","C:\\Users\\User\\Documents\\zno-helper\\src\\components\\ThemeCart.tsx":"29","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\Tests.tsx":"30","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\index.ts":"31","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\CreateTest.tsx":"32","C:\\Users\\User\\Documents\\zno-helper\\src\\components\\VariationTest.tsx":"33","C:\\Users\\User\\Documents\\zno-helper\\src\\components\\CreateTestSingle.tsx":"34","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\DuelStart.tsx":"35","C:\\Users\\User\\Documents\\zno-helper\\src\\components\\QuestionCard.tsx":"36"},{"size":555,"mtime":1607522680114,"results":"37","hashOfConfig":"38"},{"size":676,"mtime":1607354597855,"results":"39","hashOfConfig":"38"},{"size":425,"mtime":1607252810074,"results":"40","hashOfConfig":"38"},{"size":7755,"mtime":1607623413302,"results":"41","hashOfConfig":"38"},{"size":2061,"mtime":1607624696456,"results":"42","hashOfConfig":"38"},{"size":1564,"mtime":1607624072953,"results":"43","hashOfConfig":"38"},{"size":4136,"mtime":1607616246240,"results":"44","hashOfConfig":"38"},{"size":701,"mtime":1607975789704,"results":"45","hashOfConfig":"46"},{"size":1341,"mtime":1608937555066,"results":"47","hashOfConfig":"46"},{"size":1564,"mtime":1607635236913,"results":"48","hashOfConfig":"46"},{"size":65,"mtime":1607694441962,"results":"49","hashOfConfig":"46"},{"size":440,"mtime":1607635236917,"results":"50","hashOfConfig":"46"},{"size":167,"mtime":1607680925730,"results":"51","hashOfConfig":"46"},{"size":302,"mtime":1607882792422,"results":"52","hashOfConfig":"46"},{"size":16036,"mtime":1608826247725,"results":"53","hashOfConfig":"46"},{"size":7932,"mtime":1607974872918,"results":"54","hashOfConfig":"46"},{"size":2159,"mtime":1607880854409,"results":"55","hashOfConfig":"46"},{"size":1022,"mtime":1607696177935,"results":"56","hashOfConfig":"46"},{"size":784,"mtime":1607694351768,"results":"57","hashOfConfig":"46"},{"size":1528,"mtime":1607637268378,"results":"58","hashOfConfig":"46"},{"size":3612,"mtime":1607713680155,"results":"59","hashOfConfig":"46"},{"size":1906,"mtime":1607882541196,"results":"60","hashOfConfig":"46"},{"size":3856,"mtime":1608126312919,"results":"61","hashOfConfig":"46"},{"size":2172,"mtime":1608127698854,"results":"62","hashOfConfig":"46"},{"size":17282,"mtime":1608904278556,"results":"63","hashOfConfig":"46"},{"size":7147,"mtime":1608139311897,"results":"64","hashOfConfig":"46"},{"size":207,"mtime":1608826289400,"results":"65","hashOfConfig":"46"},{"size":3905,"mtime":1608937592820,"results":"66","hashOfConfig":"46"},{"size":798,"mtime":1608138163215,"results":"67","hashOfConfig":"46"},{"size":350,"mtime":1608138754699,"results":"68","hashOfConfig":"46"},{"size":431,"mtime":1608904537590,"results":"69","hashOfConfig":"46"},{"size":9634,"mtime":1608937363916,"results":"70","hashOfConfig":"46"},{"size":23906,"mtime":1608738614058,"results":"71","hashOfConfig":"46"},{"size":18333,"mtime":1608908337497,"results":"72","hashOfConfig":"46"},{"size":3846,"mtime":1608937326756,"results":"73","hashOfConfig":"46"},{"size":2860,"mtime":1608918551195,"results":"74","hashOfConfig":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"8hewoy",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1eyn39g",{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Front\\TypeScript\\my-app\\src\\App.tsx",[],["158","159"],"C:\\Front\\TypeScript\\my-app\\src\\index.tsx",[],"C:\\Front\\TypeScript\\my-app\\src\\reportWebVitals.ts",[],"C:\\Front\\TypeScript\\my-app\\src\\pages\\SignUp.tsx",["160"],"C:\\Front\\TypeScript\\my-app\\src\\redux\\reducer\\AuthReducer.js",[],"C:\\Front\\TypeScript\\my-app\\src\\redux\\actions\\action.js",[],"C:\\Front\\TypeScript\\my-app\\src\\pages\\LogIn.tsx",["161"],"C:\\Users\\User\\Documents\\zno-helper\\src\\index.tsx",[],["162","163"],"C:\\Users\\User\\Documents\\zno-helper\\src\\App.tsx",["164"],"C:\\Users\\User\\Documents\\zno-helper\\src\\redux\\actions\\action.js",[],["165","166"],"C:\\Users\\User\\Documents\\zno-helper\\src\\api\\config.ts",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\reportWebVitals.ts",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\store\\store.ts",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\store\\root-reducer.ts",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\SignUp.tsx",["167","168","169","170","171","172"],"import React, {useState} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Formik, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport {Container, Row, Col, Form, InputGroup} from 'react-bootstrap';\r\nimport MaskedInput from \"react-text-mask\";\r\nimport CodeInput from '../components/CodeInput'\r\nimport {checkUsername, register} from \"./styles/auth/thunks\";\r\nimport {RegisterBody} from '../utils/interfaces'\r\n\r\n// interface FormValues {\r\n//     firstName: string;\r\n//     email: string;\r\n//     password: string;\r\n// }\r\n\r\nconst phoneNumberMask = [\r\n    \"(\",\r\n    /[1-10]/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \")\",\r\n    \" \",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \"-\",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/\r\n];\r\n\r\nfunction SignUp():JSX.Element {\r\n    const [activeCode, setActiveCode] = useState(false)\r\n    const [activeReferal, setActiveReferal] = useState(false)\r\n    const state = useSelector(state =>  state.auth)\r\n    const dispatch = useDispatch()\r\n    const onRegisterUser = (values) => dispatch(register(values))\r\n\r\n    const initialValues: RegisterBody = {\r\n        username: '',\r\n        email: '',\r\n        phone: '',\r\n        password: ''\r\n    };\r\n\r\n    const userSchema = Yup.object({\r\n        firstName: Yup.string().required('FirstName is required'),\r\n        email: Yup.string().email('Email is invalid').required('Email is required'),\r\n        password: Yup.string().min(6, 'Введи 6 символів').required('Password is required')\r\n    })\r\n\r\n    type User = Yup.InferType<typeof userSchema>;\r\n\r\n    const validateUsername = (e:React.ChangeEvent<any>, handleChange) => {\r\n        const username = e.target.value\r\n        dispatch(checkUsername(username))\r\n        handleChange(e)\r\n    }\r\n\r\n\r\n    const validUsername = useSelector((state) => state.validation.usernameValid)\r\n\r\n    const showCode = () => {\r\n        setActiveCode(!false)\r\n    }\r\n\r\n    const showReferal = () => {\r\n        setActiveReferal(!false)\r\n    }\r\n\r\n    return (\r\n        <section className=\"signup promo d-flex justify-content-center align-items-start pt-5\">\r\n            <Container>\r\n                <Row className=\"\">\r\n                    <Col lg={8} className=\"promo-col\">\r\n                        <p>\r\n                            <Link to=\"/signup\">\r\n                                Z-Helper\r\n                            </Link>\r\n                        </p>\r\n                    </Col>\r\n                    <Col lg={4} className=\"pt-5 mt-5\">\r\n                        <h1>Реєстрація</h1>\r\n                        <Formik\r\n                            initialValues={initialValues}\r\n                            validationSchema={userSchema}\r\n                            onSubmit={(values, actions) => {\r\n                                onRegisterUser(values)\r\n                            }}\r\n                            render={({ errors, status, touched, handleChange, handleSubmit,\r\n                                         handleBlur, values }) => (\r\n                                <Form noValidate onSubmit={handleSubmit}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormikUsername\">\r\n                                            <Form.Label>Ім’я користувача</Form.Label>\r\n                                            <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                    <InputGroup.Text id=\"inputGroupPrepend\">\r\n                                                        <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <g clip-path=\"url(#clip0)\">\r\n                                                                <path d=\"M7.7 12C10.1303 12 12.1 9.31406 12.1 6C12.1 2.68594 10.1303 0 7.7 0C5.26969 0 3.3 2.68594 3.3 6C3.3 9.31406 5.26969 12 7.7 12ZM10.78 13.5H10.2059C9.44281 13.9781 8.59375 14.25 7.7 14.25C6.80625 14.25 5.96063 13.9781 5.19406 13.5H4.62C2.06938 13.5 0 16.3219 0 19.8V21.75C0 22.9922 0.739062 24 1.65 24H11.0997C11.0172 23.6812 10.9828 23.3438 11.0103 23.0016L11.2441 20.1469L11.2853 19.6266L11.5569 19.2562L14.2141 15.6328C13.3719 14.3344 12.1516 13.5 10.78 13.5ZM12.3372 20.3109L12.1034 23.1703C12.0656 23.6484 12.3613 24.0516 12.7084 23.9953L14.8019 23.6766L19.5422 17.2125L17.0775 13.8516L12.3372 20.3109ZM21.7594 12.6047L20.4566 10.8281C20.1369 10.3922 19.6144 10.3922 19.2947 10.8281L17.9953 12.6L17.8544 12.7922L20.3225 16.1531L21.7594 14.1937C22.0791 13.7531 22.0791 13.0453 21.7594 12.6047Z\" fill=\"#929292\"/>\r\n                                                            </g>\r\n                                                            <defs>\r\n                                                                <clipPath id=\"clip0\">\r\n                                                                    <rect width=\"22\" height=\"24\" fill=\"white\"/>\r\n                                                                </clipPath>\r\n                                                            </defs>\r\n                                                        </svg>\r\n                                                    </InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Ваше ім'я\"\r\n                                                    aria-describedby=\"inputGroupPrepend\"\r\n                                                    name=\"username\"\r\n                                                    value={values.username}\r\n                                                    onChange={handleChange}\r\n                                                    isInvalid={!!errors.username}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {errors.username}\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormikEmail\">\r\n                                            <Form.Label>Електронна пошта</Form.Label>\r\n                                            <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                    <InputGroup.Text id=\"inputGroupPrepend2\">\r\n                                                        <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                            <path d=\"M21.5832 8.94375C21.7508 8.79844 22 8.93437 22 9.16406V18.75C22 19.9922 21.0762 21 19.9375 21H2.0625C0.923828 21 0 19.9922 0 18.75V9.16875C0 8.93438 0.244922 8.80312 0.416797 8.94844C1.3793 9.76406 2.65547 10.8 7.03828 14.2734C7.94492 14.9953 9.47461 16.5141 11 16.5047C12.534 16.5188 14.0937 14.9672 14.966 14.2734C19.3488 10.8 20.6207 9.75938 21.5832 8.94375ZM11 15C11.9969 15.0188 13.432 13.6313 14.1539 13.0594C19.8559 8.54531 20.2898 8.15156 21.6047 7.02656C21.8539 6.81562 22 6.4875 22 6.14062V5.25C22 4.00781 21.0762 3 19.9375 3H2.0625C0.923828 3 0 4.00781 0 5.25V6.14062C0 6.4875 0.146094 6.81094 0.395312 7.02656C1.71016 8.14687 2.14414 8.54531 7.84609 13.0594C8.56797 13.6313 10.0031 15.0188 11 15Z\" fill=\"#929292\"/>\r\n                                                        </svg>\r\n                                                    </InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Ваш email\"\r\n                                                    aria-describedby=\"inputGroupPrepend2\"\r\n                                                    name=\"email\"\r\n                                                    value={values.email}\r\n                                                    onChange={handleChange}\r\n                                                    isInvalid={!!errors.email}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {errors.email}\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPhone\">\r\n                                            <Form.Label>Номер телефону</Form.Label>\r\n                                            <InputGroup>\r\n                                                <div className=\"d-flex \">\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text id=\"inputGroupPrepend3\">\r\n                                                            <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <g clip-path=\"url(#clip0)\">\r\n                                                                    <path d=\"M21.2012 1.15363L16.7325 0.0286319C16.2469 -0.0932431 15.7485 0.183319 15.5508 0.680194L13.4883 5.93019C13.3079 6.38957 13.4282 6.92863 13.7848 7.24269L16.3887 9.56769C14.8419 13.163 12.1391 16.1536 8.77467 17.8739L6.64342 15.0333C6.35123 14.6443 5.86138 14.513 5.44029 14.7099L0.627791 16.9599C0.168026 17.1802 -0.0854899 17.7239 0.0262288 18.2536L1.05748 23.1286C1.1649 23.6349 1.5774 24.0005 2.06295 24.0005C13.0672 24.0005 22.0004 14.2739 22.0004 2.25051C22.0004 1.72551 21.6696 1.27082 21.2012 1.15363Z\" fill=\"#929292\"/>\r\n                                                                </g>\r\n                                                                <defs>\r\n                                                                    <clipPath id=\"clip0\">\r\n                                                                        <rect width=\"22\" height=\"24\" fill=\"white\"/>\r\n                                                                    </clipPath>\r\n                                                                </defs>\r\n                                                            </svg>\r\n                                                        </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <MaskedInput\r\n                                                        mask={phoneNumberMask}\r\n                                                        id=\"phone\"\r\n                                                        aria-describedby=\"inputGroupPrepend3\"\r\n                                                        placeholder=\"Ваш номер\"\r\n                                                        type=\"tel\"\r\n                                                        onChange={handleChange}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"form-group text-center\">\r\n                                                    <p className={activeCode ? 'd-block' : 'd-none'}>\r\n                                                        <CodeInput />\r\n                                                    </p>\r\n                                                    <button onClick={showCode} type=\"button\" className=\"text-center btn\">Підтвердити</button>\r\n                                                </div>\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPassword\">\r\n                                            <Form.Label>Пароль</Form.Label>\r\n                                            <InputGroup>\r\n                                                <Form.Control\r\n                                                    type=\"password\"\r\n                                                    placeholder=\"Ваш пароль\"\r\n                                                    name=\"password\"\r\n                                                    value={values.password}\r\n                                                    onChange={handleChange}\r\n                                                    isInvalid={!!errors.password}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {errors.password}\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"Referal\">\r\n                                            <p onClick={showReferal}>\r\n                                                {activeReferal ? 'Реферал' : 'Вказати реферала'}\r\n                                            </p>\r\n                                            <InputGroup className={activeReferal ? 'd-flex' : 'd-none'}>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Реферал\"\r\n                                                    name=\"referral\"\r\n                                                    value={values.referral}\r\n                                                    onChange={handleChange}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <div className=\"form-group text-center\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-register mr-2 px-5\">Зареєструватися</button>\r\n                                        <p>Вже маєш профіль?\r\n                                            <Link to=\"/login\" className=\"ml-2\">\r\n                                                Увійти\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default SignUp\r\n","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\LogIn.tsx",["173","174","175"],"import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport { Formik, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from \"yup\";\r\nimport {Container, Row, Col, InputGroup, Form} from 'react-bootstrap';\r\nimport MaskedInput from \"react-text-mask\";\r\nimport {LoginAuthAction} from \"../redux/actions/action\";\r\n\r\ninterface FormValues {\r\n    number: string;\r\n    password: string;\r\n}\r\n\r\nconst phoneNumberMask = [\r\n    \"(\",\r\n    /[1-10]/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \")\",\r\n    \" \",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    \"-\",\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/,\r\n    /\\d/\r\n];\r\n\r\n\r\nfunction LogIn():JSX.Element {\r\n    const dispatch = useDispatch()\r\n    const onLogInUser = (fields) => dispatch(LoginAuthAction(fields))\r\n\r\n    const initialValues: FormValues = {\r\n        number: '',\r\n        password: '',\r\n    };\r\n\r\n    const userSchema = Yup.object({\r\n        number: Yup.string().max(11).min(3)\r\n            // .test('Phone test', 'Phone number must be valid', (val) => {\r\n            //     val = val.replace(/[\\s\\-]/g, '');\r\n            //     return val.match(/^((\\+?3)?8)?((0\\(\\d{2}\\)?)|(\\(0\\d{2}\\))|(0\\d{2}))\\d{7}$/) != null;\r\n            // })\r\n            .required('Required'),\r\n        password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\r\n    })\r\n\r\n    type User = Yup.InferType<typeof userSchema>;\r\n\r\n    return (\r\n        <section className=\"signup promo d-flex justify-content-center align-items-start pt-5\">\r\n            <Container>\r\n                <Row className=\"\">\r\n                    <Col lg={8} className=\"promo-col\">\r\n                        <p>\r\n                            <Link to=\"/signup\">\r\n                                Z-Helper\r\n                            </Link>\r\n                        </p>\r\n                    </Col>\r\n                    <Col lg={4} className=\"pt-5 mt-5\">\r\n                        <h1>Вхід</h1>\r\n                        <Formik\r\n                            initialValues={initialValues}\r\n                            validationSchema={userSchema}\r\n                            onSubmit={onLogInUser}\r\n                            render={({ errors, status, values, touched, handleChange }) => (\r\n                                <Form noValidate>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPhone\">\r\n                                            <Form.Label>Номер телефону</Form.Label>\r\n                                            <InputGroup>\r\n                                                <div className=\"d-flex \">\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text id=\"inputGroupPrepend3\">\r\n                                                            <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\"\r\n                                                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                                                <g clip-path=\"url(#clip0)\">\r\n                                                                    <path\r\n                                                                        d=\"M21.2012 1.15363L16.7325 0.0286319C16.2469 -0.0932431 15.7485 0.183319 15.5508 0.680194L13.4883 5.93019C13.3079 6.38957 13.4282 6.92863 13.7848 7.24269L16.3887 9.56769C14.8419 13.163 12.1391 16.1536 8.77467 17.8739L6.64342 15.0333C6.35123 14.6443 5.86138 14.513 5.44029 14.7099L0.627791 16.9599C0.168026 17.1802 -0.0854899 17.7239 0.0262288 18.2536L1.05748 23.1286C1.1649 23.6349 1.5774 24.0005 2.06295 24.0005C13.0672 24.0005 22.0004 14.2739 22.0004 2.25051C22.0004 1.72551 21.6696 1.27082 21.2012 1.15363Z\"\r\n                                                                        fill=\"#929292\"/>\r\n                                                                </g>\r\n                                                                <defs>\r\n                                                                    <clipPath id=\"clip0\">\r\n                                                                        <rect width=\"22\" height=\"24\" fill=\"white\"/>\r\n                                                                    </clipPath>\r\n                                                                </defs>\r\n                                                            </svg>\r\n                                                        </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <MaskedInput\r\n                                                        mask={phoneNumberMask}\r\n                                                        id=\"phone\"\r\n                                                        aria-describedby=\"inputGroupPrepend3\"\r\n                                                        placeholder=\"Ваш номер\"\r\n                                                        type=\"tel\"\r\n                                                        // onChange={handleChange}\r\n                                                    />\r\n                                                </div>\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationFormikPassword\">\r\n                                            <Form.Label>Пароль</Form.Label>\r\n                                            <InputGroup>\r\n                                                <Form.Control\r\n                                                    type=\"password\"\r\n                                                    placeholder=\"Ваш пароль\"\r\n                                                    name=\"password\"\r\n                                                    value={values.password}\r\n                                                    onChange={handleChange}\r\n                                                    isInvalid={!!errors.password}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {errors.password}\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                            <p>\r\n                                                <Link to=\"/reset\">Відновити пароль</Link>\r\n                                            </p>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <div className=\"form-group text-center\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-register mr-2 px-5\">Увійти</button>\r\n                                        <p>Ще не маєш профілю?\r\n                                            <Link to=\"/signup\" className=\"ml-2\">\r\n                                                Створити\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LogIn;\r\n","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\styles\\auth\\auth.reducer.ts",["176","177","178","179","180","181"],"import { createReducer, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AuthResponse, StateHadnlers } from \"../../../utils/interfaces\";\r\nimport { checkEmail, login, register, sendSmsToPhone } from \"./thunks\";\r\n\r\nconst initialState: AuthResponse & StateHadnlers = {\r\n    email: '',\r\n    id: 0,\r\n    roles: [],\r\n    token: '',\r\n    username: '',\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\n\r\nexport const defaultError = 'Somthing went wrong!'\r\n\r\nexport default createReducer(initialState, builder =>\r\n    builder.addCase(register.pending, (state) => {\r\n        console.log(state)\r\n        state.loading = true\r\n        state.error = null\r\n    })\r\n        .addCase(register.fulfilled, (state, action: PayloadAction<AuthResponse>) => {\r\n            // state = { ...action.payload, ...state }\r\n            const { token, id, email, username, roles } = action.payload\r\n            state.loading = false\r\n            state.error = null\r\n        })\r\n        .addCase(register.rejected, (state, { error }) => {\r\n            state.loading = false\r\n            state.error = error.message ?? defaultError\r\n        })\r\n        .addCase(login.pending, (state) => {\r\n            state.loading = true\r\n            state.error = null\r\n        })\r\n        .addCase(login.fulfilled, (state, action: PayloadAction<AuthResponse>) => {\r\n            // state = { ...action.payload, ...state }\r\n            // state.loading = false\r\n            // state.error = null\r\n        })\r\n        .addCase(login.rejected, (state, { error }) => {\r\n            state.loading = false\r\n            state.error = error.message ?? defaultError\r\n        })\r\n        .addCase(sendSmsToPhone.pending, (state) => {\r\n            state.loading = true\r\n            state.error = null\r\n        })\r\n        .addCase(sendSmsToPhone.fulfilled, (state, action: PayloadAction<any>) => {\r\n            // state = { ...action.payload, ...state }\r\n            // state.loading = false\r\n            // state.error = null\r\n        })\r\n        .addCase(sendSmsToPhone.rejected, (state, { error }) => {\r\n            state.loading = false\r\n            state.error = error.message ?? defaultError\r\n        })\r\n\r\n\r\n)\r\n","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\styles\\auth\\thunks.ts",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\api\\authApi.ts",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\utils\\axios.ts",["182"],"import BaseAxios from \"axios\";\r\nimport jwtDecode , {JwtPayload} from \"jwt-decode\";\r\nimport { BASE_URL } from \"../api/config\";\r\n\r\nexport const axios = BaseAxios.create({ baseURL: BASE_URL })\r\n\r\nconst whiteList = ['auth',]\r\n\r\nconst inWhiteList = (url: string): boolean => {\r\n    const match = whiteList.find((i) => url.includes(i))\r\n    return !!match\r\n}\r\nconst tokenValid = (token?: string): boolean => {\r\n    if(!token) return false\r\n    try {\r\n        const currentDate = new Date()\r\n        const { exp }: JwtPayload = jwtDecode(token)\r\n        if(exp === undefined) return false\r\n        return !(exp * 1000 < currentDate.getTime())\r\n    } catch (error) {\r\n        return false\r\n    }\r\n}\r\n\r\naxios.interceptors.request.use(\r\n    async (request) => {\r\n        if (!inWhiteList(request.url ?? '')) {\r\n            const newRequest = { ...request }\r\n            return newRequest\r\n        }\r\n\r\n        return request\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error)\r\n    },\r\n)\r\n\r\naxios.interceptors.response.use(\r\n    (response) => {\r\n        return response.data\r\n    },\r\n    async (error) => {\r\n        // const { token } = store.getState().login\r\n        if (\r\n            error &&\r\n            error.response &&\r\n            (error.response.status === 401 || error.response.status === 403)\r\n            // && token\r\n        ) {\r\n            // eslint-disable-next-line no-void\r\n            // void store.dispatch(doLogout())\r\n            return null\r\n        }\r\n        return Promise.reject(error)\r\n    },\r\n)\r\n","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\ResetPassword.tsx",["183"],"import React from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {ErrorMessage, Field, Form, Formik, FormikValues} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\ninterface FormValues {\r\n    email: string;\r\n}\r\n\r\n\r\nfunction ResetPassword():JSX.Element {\r\n\r\n    const initialValues: FormValues = {\r\n        email: '',\r\n    };\r\n\r\n    const userSchema = Yup.object({\r\n        email: Yup.string().email('Email is invalid').required('Email is required'),\r\n    })\r\n\r\n    type User = Yup.InferType<typeof userSchema>;\r\n\r\n    function onReset(values: FormikValues) {\r\n        console.log(values)\r\n    }\r\n\r\n    return (\r\n        <section className=\"reset d-flex justify-content-center align-items-start pt-5\">\r\n            <Container>\r\n                <Row className=\"\">\r\n                    <Col lg={8} className=\"promo-col\">\r\n                        <p>\r\n                            <Link to=\"/signup\">\r\n                                Z-Helper\r\n                            </Link>\r\n                        </p>\r\n                    </Col>\r\n                    <Col lg={4} className=\"pt-5 mt-5\">\r\n                        <h3 className=\"reset-title\">Відновлення паролю</h3>\r\n                        <Formik\r\n                            initialValues={initialValues}\r\n                            validationSchema={userSchema}\r\n                            onSubmit={(values, actions) => {\r\n                                onReset(values)\r\n                            }}\r\n                            render={({ errors, status, touched, handleChange, handleSubmit,\r\n                                         handleBlur, values }) => (\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <div className=\"form-group mt-5\">\r\n                                        <label htmlFor=\"email\">Електронна пошта</label>\r\n                                        <Field\r\n                                            name=\"email\"\r\n                                            type=\"text\"\r\n                                            value={values.email}\r\n                                            onChange={handleChange}\r\n                                            className={`form-control ${errors.email && touched.email && 'is-invalid'}`}/>\r\n                                        <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <Link to=\"/\">Відновлення через телефон</Link>\r\n                                    </div>\r\n                                    <div className=\"form-group text-center\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-register mr-2 px-5\">Надіслати</button>\r\n                                        <p>\r\n                                            Згадав пароль?\r\n                                            <Link to=\"/login\" className=\"ml-2\">\r\n                                                Увійти\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n\r\n                                </Form>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\styles\\auth\\validation.reducer.ts",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\Subjects.tsx",["184","185"],"import React, { useState} from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\nimport ch from '../assets/images/chemistry mini.png'\r\nimport en from '../assets/images/english.png'\r\nimport ph from '../assets/images/physics.png'\r\n\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\r\n\r\n\r\nfunction Subjects():JSX.Element {\r\n    return (\r\n        <section className=\"subjects pt-5\">\r\n            <Container>\r\n                <Row className=\"text-center\">\r\n                    <Col xs=\"12\">\r\n                        <h3>Username вибери предмети для складання ЗНО</h3>\r\n                        <p>Ти будеш готуватись по цим предметах</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs=\"12\">\r\n                        <Swiper\r\n                            spaceBetween={50}\r\n                            slidesPerView={3}\r\n                            navigation\r\n                            scrollbar={{ draggable: true }}\r\n                            onSwiper={(swiper) => console.log(swiper)}\r\n                            onSlideChange={() => console.log('slide change')}\r\n                        >\r\n                            <SwiperSlide>\r\n                                <div className=\"text-uppercase d-flex flex-column align-items-center\">\r\n                                    <span className=\"\">Xімія</span>\r\n                                    <img className=\"img-fluid\" src={ch} alt=\"Chemistry\"/>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                            <SwiperSlide>\r\n                                <div className=\"text-uppercase d-flex flex-column align-items-center\">\r\n                                    <span className=\"\">Анг.мова</span>\r\n                                    <img className=\"img-fluid\" src={en} alt=\"Chemistry\"/>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                            <SwiperSlide>\r\n\r\n                                <div className=\"text-uppercase d-flex flex-column align-items-center\">\r\n                                    <span className=\"\">Фізика</span>\r\n                                    <img className=\"img-fluid\" src={en} alt=\"Chemistry\"/>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                            <SwiperSlide>\r\n                                <div className=\"text-uppercase d-flex flex-column align-items-center\">\r\n                                    <span className=\"\">Анг.мова</span>\r\n                                    <img className=\"img-fluid\" src={en} alt=\"Chemistry\"/>\r\n                                </div>\r\n                            </SwiperSlide>\r\n                        </Swiper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={12} className=\"d-flex justify-content-center text-center align-items-center mt-5\">\r\n                        <div>\r\n                            <p>Вибрано 5/6</p>\r\n                            <Link to=\"/\" className=\"btn btn-primary btn-continue px-5 \">\r\n                                Продовжити\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Subjects\r\n","C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\Home.tsx",["186","187"],"import React from 'react';\r\nimport {Col, Container, Row} from 'react-bootstrap';\r\nimport SubjectCart from \"../components/SubjectCart\";\r\nimport {Card, CardBody, CardImg } from \"shards-react\";\r\nimport history from \"../assets/images/history.png\";\r\n\r\nfunction Home():JSX.Element {\r\n\r\n    return (\r\n        <section className=\"\">\r\n            <Container className=\"\">\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <h2>Предмети</h2>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-between mt-5\">\r\n                    <SubjectCart/>\r\n                    <SubjectCart/>\r\n                    <SubjectCart/>\r\n                </Row>\r\n                <Row className=\"d-flex justify-content-between mt-3\">\r\n                    <SubjectCart/>\r\n                    <SubjectCart/>\r\n                    <Col>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <p className=\"wrap\">\r\n                                    <svg className=\"add\" width=\"102\" height=\"102\" viewBox=\"0 0 102 102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <circle cx=\"51\" cy=\"51\" r=\"51\" fill=\"#567BF3\" fill-opacity=\"0.1\"/>\r\n                                        <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M50.4499 35.7002C49.3454 35.7002 48.4499 36.5956 48.4499 37.7002V48.4502H37.6999C36.5954 48.4502 35.6999 49.3456 35.6999 50.4502V51.5502C35.6999 52.6548 36.5954 53.5502 37.6999 53.5502H48.4499V64.3002C48.4499 65.4048 49.3454 66.3002 50.4499 66.3002H51.5499C52.6545 66.3002 53.5499 65.4048 53.5499 64.3002V53.5502H64.2999C65.4045 53.5502 66.2999 52.6548 66.2999 51.5502V50.4502C66.2999 49.3456 65.4045 48.4502 64.2999 48.4502H53.5499V37.7002C53.5499 36.5956 52.6545 35.7002 51.5499 35.7002H50.4499Z\" fill=\"#567BF3\"/>\r\n                                    </svg>\r\n                                </p>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default Home\r\n","C:\\Users\\User\\Documents\\zno-helper\\src\\components\\SideBar.tsx",["188","189"],"import React from 'react';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n\r\n            '& .MuiPaper-root': {\r\n                background: '#09163e',\r\n            },\r\n        },\r\n        appBar: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n        drawer: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            backgroundColor: 'red'\r\n        },\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        // necessary for content to be below app bar\r\n        toolbar: theme.mixins.toolbar,\r\n        content: {\r\n            flexGrow: 1,\r\n            backgroundColor: theme.palette.background.default,\r\n            padding: theme.spacing(3),\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function SideBar():JSX.Element {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n                anchor=\"left\"\r\n            >\r\n                <div className={classes.toolbar} />\r\n                {/*<Divider />*/}\r\n                <div className=\"profile-block text-center mt-5\">\r\n                    <img className=\"profile-block__img mt-5\" src=\"https://source.unsplash.com/user/erondu/110x110\" alt=\"Logo\"/>\r\n                    <h6 className=\"profile-block__name mt-2\">Username</h6>\r\n                    <p className=\"profile-block__period\">Пробний період</p>\r\n                </div>\r\n                <List>\r\n                    <div className=\"menu-block text-center mt-5\">\r\n                        <ul>\r\n                            <li>\r\n                                <Link to=\"/\" className=\"active\">\r\n                                    <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M25.0001 9.99989L17.5001 3.42489C16.8126 2.80994 15.9225 2.46997 15.0001 2.46997C14.0777 2.46997 13.1876 2.80994 12.5001 3.42489L5.00012 9.99989C4.60308 10.355 4.28624 10.7906 4.07071 11.2777C3.85517 11.7648 3.74588 12.2922 3.75012 12.8249V23.7499C3.75012 24.7444 4.14521 25.6983 4.84847 26.4015C5.55173 27.1048 6.50556 27.4999 7.50012 27.4999H22.5001C23.4947 27.4999 24.4485 27.1048 25.1518 26.4015C25.855 25.6983 26.2501 24.7444 26.2501 23.7499V12.8124C26.2526 12.2818 26.1424 11.7568 25.927 11.272C25.7115 10.7872 25.3956 10.3536 25.0001 9.99989ZM17.5001 24.9999H12.5001V18.7499C12.5001 18.4184 12.6318 18.1004 12.8662 17.866C13.1007 17.6316 13.4186 17.4999 13.7501 17.4999H16.2501C16.5816 17.4999 16.8996 17.6316 17.134 17.866C17.3684 18.1004 17.5001 18.4184 17.5001 18.7499V24.9999ZM23.7501 23.7499C23.7501 24.0814 23.6184 24.3993 23.384 24.6338C23.1496 24.8682 22.8316 24.9999 22.5001 24.9999H20.0001V18.7499C20.0001 17.7553 19.605 16.8015 18.9018 16.0982C18.1985 15.395 17.2447 14.9999 16.2501 14.9999H13.7501C12.7556 14.9999 11.8017 15.395 11.0985 16.0982C10.3952 16.8015 10.0001 17.7553 10.0001 18.7499V24.9999H7.50012C7.1686 24.9999 6.85066 24.8682 6.61624 24.6338C6.38181 24.3993 6.25012 24.0814 6.25012 23.7499V12.8124C6.25034 12.6349 6.28836 12.4595 6.36164 12.2979C6.43492 12.1362 6.54178 11.992 6.67512 11.8749L14.1751 5.31239C14.4032 5.11199 14.6965 5.00147 15.0001 5.00147C15.3038 5.00147 15.597 5.11199 15.8251 5.31239L23.3251 11.8749C23.4585 11.992 23.5653 12.1362 23.6386 12.2979C23.7119 12.4595 23.7499 12.6349 23.7501 12.8124V23.7499Z\" fill=\"#DDDDDD\"/>\r\n                                    </svg>\r\n                                    Предмети\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/home\">\r\n                                    <svg width=\"27\" height=\"28\" viewBox=\"0 0 27 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M25.875 23.9863V21.7363C25.8743 20.7393 25.5424 19.7707 24.9315 18.9827C24.3207 18.1947 23.4654 17.6318 22.5 17.3826\" stroke=\"#DDDDDD\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                                        <path d=\"M19.125 23.9863V21.7363C19.125 20.5429 18.6509 19.3983 17.807 18.5543C16.9631 17.7104 15.8185 17.2363 14.625 17.2363H5.625C4.43153 17.2363 3.28693 17.7104 2.44302 18.5543C1.59911 19.3983 1.125 20.5429 1.125 21.7363V23.9863\" stroke=\"#DDDDDD\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                                        <path d=\"M18 3.88257C18.968 4.13041 19.8259 4.69336 20.4386 5.48267C21.0513 6.27198 21.3838 7.24275 21.3838 8.24194C21.3838 9.24114 21.0513 10.2119 20.4386 11.0012C19.8259 11.7905 18.968 12.3535 18 12.6013\" stroke=\"#DDDDDD\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                                        <path d=\"M10.125 12.7363C12.6103 12.7363 14.625 10.7216 14.625 8.23633C14.625 5.75105 12.6103 3.73633 10.125 3.73633C7.63972 3.73633 5.625 5.75105 5.625 8.23633C5.625 10.7216 7.63972 12.7363 10.125 12.7363Z\" stroke=\"#DDDDDD\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                                    </svg>\r\n                                    Друзі\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/home\">\r\n                                    <svg width=\"26\" height=\"29\" viewBox=\"0 0 26 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <path d=\"M25.7319 23.1964H23.0512V20.4781C23.0512 20.3285 22.9305 20.2062 22.7831 20.2062H21.1747C21.0272 20.2062 20.9066 20.3285 20.9066 20.4781V23.1964H18.2258C18.0784 23.1964 17.9578 23.3188 17.9578 23.4683V25.0993C17.9578 25.2488 18.0784 25.3711 18.2258 25.3711H20.9066V28.0895C20.9066 28.239 21.0272 28.3613 21.1747 28.3613H22.7831C22.9305 28.3613 23.0512 28.239 23.0512 28.0895V25.3711H25.7319C25.8794 25.3711 26 25.2488 26 25.0993V23.4683C26 23.3188 25.8794 23.1964 25.7319 23.1964ZM8.35732 13.8996C8.32716 13.604 8.31041 13.305 8.31041 13.0025C8.31041 12.4623 8.36067 11.9356 8.4545 11.4225C8.47795 11.3002 8.41428 11.1744 8.3037 11.1235C7.84798 10.9162 7.42911 10.6308 7.06721 10.2706C6.64077 9.8513 6.3052 9.34648 6.08192 8.78833C5.85863 8.23019 5.75253 7.63098 5.7704 7.02893C5.80055 5.93818 6.23283 4.9018 6.98679 4.12027C7.81447 3.26059 8.92698 2.79167 10.1099 2.80526C11.1788 2.81545 12.2109 3.2334 12.9917 3.97416C13.2564 4.22561 13.4843 4.50424 13.6753 4.80326C13.7423 4.9086 13.873 4.95277 13.9869 4.912C14.5767 4.70472 15.1999 4.55861 15.84 4.49065C16.0276 4.47026 16.1348 4.26638 16.0511 4.09648C14.962 1.9116 12.737 0.402901 10.1635 0.362125C6.45064 0.30436 3.35437 3.39311 3.35437 7.15805C3.35437 9.29197 4.32279 11.1948 5.84077 12.4419C4.77517 12.9414 3.79334 13.6312 2.94221 14.4942C1.10589 16.3529 0.0671025 18.8063 8.37906e-05 21.4261C-0.000810591 21.4624 0.00546271 21.4984 0.0185337 21.5322C0.0316047 21.566 0.0512092 21.5967 0.0761919 21.6227C0.101175 21.6487 0.13103 21.6693 0.163999 21.6834C0.196968 21.6975 0.232384 21.7047 0.268159 21.7047H2.14803C2.29212 21.7047 2.41276 21.5892 2.41611 21.4431C2.47978 19.4723 3.26725 17.6272 4.65118 16.2272C5.63636 15.2282 6.8427 14.535 8.15961 14.1986C8.28695 14.1612 8.37407 14.0355 8.35732 13.8996ZM23.4533 13.0025C23.4533 9.28517 20.5078 6.26439 16.8553 6.20662C13.1425 6.14885 10.0495 9.2376 10.0495 13.0025C10.0495 15.1365 11.0213 17.0393 12.5359 18.2864C11.4593 18.7924 10.4792 19.4872 9.64073 20.3387C7.80441 22.1974 6.76562 24.6508 6.69861 27.2672C6.69771 27.3035 6.70398 27.3395 6.71706 27.3733C6.73013 27.4071 6.74973 27.4378 6.77471 27.4638C6.7997 27.4898 6.82955 27.5104 6.86252 27.5245C6.89549 27.5386 6.9309 27.5458 6.96668 27.5458H8.8432C8.9873 27.5458 9.10793 27.4303 9.11128 27.2842C9.17495 25.3134 9.96242 23.4683 11.3464 22.0683C12.7906 20.6038 14.7073 19.7985 16.7514 19.7985C20.4508 19.7985 23.4533 16.7573 23.4533 13.0025ZM19.784 16.0777C18.9731 16.9 17.8974 17.3519 16.7514 17.3519C15.6054 17.3519 14.5297 16.9 13.7188 16.0777C13.3141 15.6695 12.9944 15.1831 12.7786 14.6473C12.5627 14.1114 12.4551 13.5371 12.4622 12.9584C12.4723 11.8438 12.9112 10.7667 13.6786 9.96816C14.4828 9.13227 15.5585 8.66674 16.7079 8.65315C17.8438 8.64296 18.9463 9.09149 19.7572 9.89681C20.5882 10.7225 21.044 11.8268 21.044 13.0025C21.0406 14.1646 20.5949 15.2554 19.784 16.0777Z\" fill=\"#DDDDDD\"/>\r\n                                    </svg>\r\n                                    Запросити друга\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/home\">\r\n                                    <svg width=\"25\" height=\"26\" viewBox=\"0 0 25 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                        <g clip-path=\"url(#clip0)\">\r\n                                            <path d=\"M12.5 15.9863C14.2259 15.9863 15.625 14.5872 15.625 12.8613C15.625 11.1354 14.2259 9.73633 12.5 9.73633C10.7741 9.73633 9.375 11.1354 9.375 12.8613C9.375 14.5872 10.7741 15.9863 12.5 15.9863Z\" stroke=\"#DDDDDD\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                                            <path d=\"M20.2084 15.9864C20.0698 16.3006 20.0284 16.6491 20.0897 16.987C20.1509 17.3249 20.312 17.6367 20.5522 17.8822L20.6147 17.9447C20.8084 18.1382 20.962 18.368 21.0669 18.6209C21.1717 18.8738 21.2257 19.1449 21.2257 19.4187C21.2257 19.6925 21.1717 19.9636 21.0669 20.2165C20.962 20.4694 20.8084 20.6992 20.6147 20.8927C20.4212 21.0864 20.1914 21.24 19.9385 21.3449C19.6856 21.4497 19.4145 21.5037 19.1407 21.5037C18.8669 21.5037 18.5958 21.4497 18.3429 21.3449C18.09 21.24 17.8602 21.0864 17.6667 20.8927L17.6042 20.8302C17.3587 20.59 17.0469 20.4289 16.709 20.3677C16.3711 20.3064 16.0226 20.3477 15.7084 20.4864C15.4003 20.6185 15.1376 20.8377 14.9525 21.1172C14.7674 21.3966 14.6681 21.7241 14.6667 22.0593V22.2364C14.6667 22.7889 14.4473 23.3188 14.0566 23.7095C13.6659 24.1002 13.1359 24.3197 12.5834 24.3197C12.0309 24.3197 11.501 24.1002 11.1103 23.7095C10.7196 23.3188 10.5001 22.7889 10.5001 22.2364V22.1427C10.492 21.7979 10.3804 21.4635 10.1798 21.183C9.97915 20.9025 9.69876 20.6888 9.37508 20.5697C9.0609 20.4311 8.71238 20.3897 8.37447 20.451C8.03656 20.5123 7.72475 20.6733 7.47925 20.9135L7.41675 20.976C7.22326 21.1697 6.99349 21.3234 6.74058 21.4282C6.48767 21.533 6.21657 21.587 5.94279 21.587C5.66901 21.587 5.39791 21.533 5.145 21.4282C4.89208 21.3234 4.66232 21.1697 4.46883 20.976C4.27513 20.7825 4.12147 20.5527 4.01662 20.2998C3.91178 20.0469 3.85782 19.7758 3.85782 19.502C3.85782 19.2283 3.91178 18.9572 4.01662 18.7042C4.12147 18.4513 4.27513 18.2216 4.46883 18.0281L4.53133 17.9656C4.77147 17.7201 4.93257 17.4083 4.99384 17.0704C5.05511 16.7324 5.01374 16.3839 4.87508 16.0697C4.74304 15.7616 4.52378 15.4989 4.24432 15.3138C3.96485 15.1287 3.63736 15.0294 3.30216 15.0281H3.12508C2.57255 15.0281 2.04264 14.8086 1.65194 14.4179C1.26124 14.0272 1.04175 13.4973 1.04175 12.9447C1.04175 12.3922 1.26124 11.8623 1.65194 11.4716C2.04264 11.0809 2.57255 10.8614 3.12508 10.8614H3.21883C3.56362 10.8533 3.898 10.7417 4.17852 10.5411C4.45903 10.3405 4.6727 10.0601 4.79175 9.73641C4.93041 9.42223 4.97177 9.07371 4.9105 8.7358C4.84923 8.39788 4.68814 8.08607 4.448 7.84058L4.3855 7.77808C4.1918 7.58459 4.03813 7.35482 3.93329 7.10191C3.82845 6.849 3.77448 6.5779 3.77448 6.30412C3.77448 6.03034 3.82845 5.75924 3.93329 5.50633C4.03813 5.25341 4.1918 5.02364 4.3855 4.83016C4.57898 4.63646 4.80875 4.48279 5.06166 4.37795C5.31458 4.27311 5.58567 4.21915 5.85946 4.21915C6.13324 4.21915 6.40434 4.27311 6.65725 4.37795C6.91016 4.48279 7.13993 4.63646 7.33341 4.83016L7.39591 4.89266C7.64141 5.1328 7.95322 5.29389 8.29113 5.35516C8.62905 5.41643 8.97756 5.37507 9.29175 5.23641H9.37508C9.68317 5.10436 9.94593 4.88511 10.131 4.60564C10.3161 4.32618 10.4154 3.99869 10.4167 3.66349V3.48641C10.4167 2.93388 10.6362 2.40397 11.0269 2.01327C11.4176 1.62257 11.9475 1.40308 12.5001 1.40308C13.0526 1.40308 13.5825 1.62257 13.9732 2.01327C14.3639 2.40397 14.5834 2.93388 14.5834 3.48641V3.58016C14.5848 3.91535 14.6841 4.24284 14.8692 4.52231C15.0542 4.80178 15.317 5.02103 15.6251 5.15308C15.9393 5.29174 16.2878 5.3331 16.6257 5.27183C16.9636 5.21056 17.2754 5.04947 17.5209 4.80933L17.5834 4.74683C17.7769 4.55313 18.0067 4.39946 18.2596 4.29462C18.5125 4.18978 18.7836 4.13581 19.0574 4.13581C19.3312 4.13581 19.6023 4.18978 19.8552 4.29462C20.1081 4.39946 20.3378 4.55313 20.5313 4.74683C20.725 4.94031 20.8787 5.17008 20.9835 5.42299C21.0884 5.6759 21.1423 5.947 21.1423 6.22078C21.1423 6.49457 21.0884 6.76566 20.9835 7.01858C20.8787 7.27149 20.725 7.50126 20.5313 7.69474L20.4688 7.75724C20.2287 8.00274 20.0676 8.31455 20.0063 8.65246C19.9451 8.99037 19.9864 9.33889 20.1251 9.65308V9.73641C20.2571 10.0445 20.4764 10.3073 20.7558 10.4923C21.0353 10.6774 21.3628 10.7767 21.698 10.7781H21.8751C22.4276 10.7781 22.9575 10.9976 23.3482 11.3883C23.7389 11.779 23.9584 12.3089 23.9584 12.8614C23.9584 13.4139 23.7389 13.9438 23.3482 14.3345C22.9575 14.7252 22.4276 14.9447 21.8751 14.9447H21.7813C21.4461 14.9461 21.1186 15.0454 20.8392 15.2305C20.5597 15.4156 20.3405 15.6783 20.2084 15.9864V15.9864Z\" stroke=\"#DDDDDD\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                                        </g>\r\n                                        <defs>\r\n                                            <clipPath id=\"clip0\">\r\n                                                <rect width=\"25\" height=\"25\" fill=\"white\" transform=\"translate(0 0.361328)\"/>\r\n                                            </clipPath>\r\n                                        </defs>\r\n                                    </svg>\r\n                                    Налаштування\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </List>\r\n                <Divider />\r\n                <div className=\"footer-block text-center mb-5\">\r\n                    <p>\r\n                        <Link to=\"/home\" className=\"logout\">\r\n                            Вийти\r\n                            <svg className=\"ml-3\" width=\"20\" height=\"18\" viewBox=\"0 0 20 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M20 9.00016L15.0005 5.00057L15.0005 8.00026L6.00142 8.00026L6.00142 10.0001L15.0005 10.0001L15.0005 12.9998L20 9.00016Z\" fill=\"#FF8080\"/>\r\n                                <path d=\"M8.99993 18.0002C10.1823 18.0035 11.3535 17.7721 12.4458 17.3195C13.5381 16.8669 14.5298 16.2021 15.3633 15.3635L13.9494 13.9496C12.6276 15.2715 10.8697 16.0004 8.99993 16.0004C7.13011 16.0004 5.37229 15.2715 4.05043 13.9496C2.72856 12.6278 1.99963 10.8699 1.99963 9.00012C1.99963 7.13031 2.72856 5.37249 4.05043 4.05062C5.37229 2.72875 7.13012 1.99983 8.99993 1.99983C10.8697 1.99983 12.6276 2.72875 13.9494 4.05062L15.3633 2.63677C13.6645 0.936937 11.4047 3.39862e-05 8.99993 3.3776e-05C6.59517 3.35657e-05 4.3354 0.936936 2.63657 2.63676C0.936744 4.33559 -0.000162081 6.59536 -0.000162291 9.00012C-0.000162502 11.4049 0.936743 13.6646 2.63657 15.3635C3.47009 16.2021 4.46172 16.8669 5.55402 17.3195C6.64632 17.7721 7.81757 18.0035 8.99993 18.0002Z\" fill=\"#FF8080\"/>\r\n                            </svg>\r\n                        </Link>\r\n                    </p>\r\n                    <p className=\"close-sidebar\">\r\n                        <svg className=\"mr-3\" width=\"8\" height=\"15\" viewBox=\"0 0 8 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M6.63412 14.1758C6.48472 14.1763 6.33711 14.1433 6.20213 14.0793C6.06716 14.0153 5.94824 13.9218 5.85412 13.8058L1.02412 7.80581C0.877037 7.62688 0.796631 7.40244 0.796631 7.17081C0.796631 6.93919 0.877037 6.71475 1.02412 6.53581L6.02412 0.535813C6.19386 0.331596 6.43777 0.203172 6.70219 0.178792C6.96662 0.154412 7.2299 0.236074 7.43412 0.405813C7.63834 0.575551 7.76676 0.819463 7.79114 1.08389C7.81552 1.34832 7.73386 1.6116 7.56412 1.81581L3.09412 7.17581L7.41412 12.5358C7.5364 12.6826 7.61408 12.8613 7.63796 13.0509C7.66184 13.2404 7.63092 13.4329 7.54886 13.6054C7.46681 13.7779 7.33705 13.9233 7.17494 14.0244C7.01283 14.1255 6.82515 14.178 6.63412 14.1758Z\" fill=\"#DDDDDD\"/>\r\n                        </svg>\r\n                        Згорнути\r\n                    </p>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\User\\Documents\\zno-helper\\src\\components\\SubjectCart.tsx",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\components\\CodeInput.tsx",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\Subject.tsx",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\components\\ThemeCart.tsx",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\Tests.tsx",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\index.ts",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\CreateTest.tsx",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\components\\VariationTest.tsx",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\components\\CreateTestSingle.tsx",[],"C:\\Users\\User\\Documents\\zno-helper\\src\\pages\\DuelStart.tsx",["190","191","192"],"C:\\Users\\User\\Documents\\zno-helper\\src\\components\\QuestionCard.tsx",["193"],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":55,"column":10,"nodeType":"200","messageId":"201","endLine":55,"endColumn":14},{"ruleId":"198","severity":1,"message":"199","line":34,"column":10,"nodeType":"200","messageId":"201","endLine":34,"endColumn":14},{"ruleId":"194","replacedBy":"202"},{"ruleId":"196","replacedBy":"203"},{"ruleId":"198","severity":1,"message":"204","line":3,"column":9,"nodeType":"200","messageId":"201","endLine":3,"endColumn":18},{"ruleId":"194","replacedBy":"202"},{"ruleId":"196","replacedBy":"203"},{"ruleId":"198","severity":1,"message":"205","line":4,"column":18,"nodeType":"200","messageId":"201","endLine":4,"endColumn":23},{"ruleId":"198","severity":1,"message":"206","line":4,"column":25,"nodeType":"200","messageId":"201","endLine":4,"endColumn":37},{"ruleId":"198","severity":1,"message":"207","line":38,"column":11,"nodeType":"200","messageId":"201","endLine":38,"endColumn":16},{"ruleId":"198","severity":1,"message":"199","line":55,"column":10,"nodeType":"200","messageId":"201","endLine":55,"endColumn":14},{"ruleId":"198","severity":1,"message":"208","line":57,"column":11,"nodeType":"200","messageId":"201","endLine":57,"endColumn":27},{"ruleId":"198","severity":1,"message":"209","line":64,"column":11,"nodeType":"200","messageId":"201","endLine":64,"endColumn":24},{"ruleId":"198","severity":1,"message":"205","line":4,"column":18,"nodeType":"200","messageId":"201","endLine":4,"endColumn":23},{"ruleId":"198","severity":1,"message":"206","line":4,"column":25,"nodeType":"200","messageId":"201","endLine":4,"endColumn":37},{"ruleId":"198","severity":1,"message":"199","line":52,"column":10,"nodeType":"200","messageId":"201","endLine":52,"endColumn":14},{"ruleId":"198","severity":1,"message":"210","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":20},{"ruleId":"198","severity":1,"message":"211","line":26,"column":21,"nodeType":"200","messageId":"201","endLine":26,"endColumn":26},{"ruleId":"198","severity":1,"message":"212","line":26,"column":28,"nodeType":"200","messageId":"201","endLine":26,"endColumn":30},{"ruleId":"198","severity":1,"message":"213","line":26,"column":32,"nodeType":"200","messageId":"201","endLine":26,"endColumn":37},{"ruleId":"198","severity":1,"message":"214","line":26,"column":39,"nodeType":"200","messageId":"201","endLine":26,"endColumn":47},{"ruleId":"198","severity":1,"message":"215","line":26,"column":49,"nodeType":"200","messageId":"201","endLine":26,"endColumn":54},{"ruleId":"198","severity":1,"message":"216","line":13,"column":7,"nodeType":"200","messageId":"201","endLine":13,"endColumn":17},{"ruleId":"198","severity":1,"message":"199","line":23,"column":10,"nodeType":"200","messageId":"201","endLine":23,"endColumn":14},{"ruleId":"198","severity":1,"message":"217","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"218","line":13,"column":8,"nodeType":"200","messageId":"201","endLine":13,"endColumn":10},{"ruleId":"198","severity":1,"message":"219","line":4,"column":25,"nodeType":"200","messageId":"201","endLine":4,"endColumn":32},{"ruleId":"198","severity":1,"message":"220","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":15},{"ruleId":"198","severity":1,"message":"221","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":16},{"ruleId":"198","severity":1,"message":"222","line":8,"column":8,"nodeType":"200","messageId":"201","endLine":8,"endColumn":20},{"ruleId":"198","severity":1,"message":"223","line":4,"column":26,"nodeType":"200","messageId":"201","endLine":4,"endColumn":31},{"ruleId":"198","severity":1,"message":"224","line":35,"column":25,"nodeType":"200","messageId":"201","endLine":35,"endColumn":39},{"ruleId":"198","severity":1,"message":"225","line":39,"column":15,"nodeType":"200","messageId":"201","endLine":39,"endColumn":19},{"ruleId":"198","severity":1,"message":"226","line":6,"column":6,"nodeType":"200","messageId":"201","endLine":6,"endColumn":11},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"@typescript-eslint/no-unused-vars","'User' is defined but never used.","Identifier","unusedVar",["227"],["228"],"'Container' is defined but never used.","'Field' is defined but never used.","'ErrorMessage' is defined but never used.","'state' is assigned a value but never used.","'validateUsername' is assigned a value but never used.","'validUsername' is assigned a value but never used.","'checkEmail' is defined but never used.","'token' is assigned a value but never used.","'id' is assigned a value but never used.","'email' is assigned a value but never used.","'username' is assigned a value but never used.","'roles' is assigned a value but never used.","'tokenValid' is assigned a value but never used.","'useState' is defined but never used.","'ph' is defined but never used.","'CardImg' is defined but never used.","'history' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'Badge' is defined but never used.","'setCopySuccess' is assigned a value but never used.","'link' is assigned a value but never used.","'Props' is defined but never used.","no-global-assign","no-unsafe-negation"]